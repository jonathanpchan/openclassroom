{"version":3,"sources":["webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/buildings.service.ts","webpack:///./src/app/services/studybuddy.service.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/app/components/find-now/find-now.component.ts","webpack:///./src/app/services/roominfo.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/course/course.component.ts","webpack:///./src/app/components/devguide/devguide.component.ts","webpack:///./src/app/components/find-home/find-home.component.ts","webpack:///./src/app/components/find-times/find-times.component.ts","webpack:///./src/app/components/find/find.component.ts","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/room/room.component.ts","webpack:///./src/app/components/schedule/schedule.component.ts","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/studybuddy/studybuddy.component.ts","webpack:///./src/app/components/usermanual/usermanual.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/chat/chat.component.css","webpack:///./src/app/components/course/course.component.css","webpack:///./src/app/components/devguide/devguide.component.css","webpack:///./src/app/components/find-home/find-home.component.css","webpack:///./src/app/components/find-now/find-now.component.css","webpack:///./src/app/components/find-times/find-times.component.css","webpack:///./src/app/components/find/find.component.css","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/room/room.component.css","webpack:///./src/app/components/schedule/schedule.component.css","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/studybuddy/studybuddy.component.css","webpack:///./src/app/components/usermanual/usermanual.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/course/course.component.html","webpack:///./src/app/components/devguide/devguide.component.html","webpack:///./src/app/components/find-home/find-home.component.html","webpack:///./src/app/components/find-now/find-now.component.html","webpack:///./src/app/components/find-times/find-times.component.html","webpack:///./src/app/components/find/find.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/room/room.component.html","webpack:///./src/app/components/schedule/schedule.component.html","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/studybuddy/studybuddy.component.html","webpack:///./src/app/components/usermanual/usermanual.component.html","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  authToken: any;\r\n  user: any;\r\n  constructor(private http: Http) { }\r\n\r\n  //=========== User Registration ============\r\n  // Register a user given user information from payload\r\n  registerUser(user) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/register', user, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/register', user, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Authenticate a user given user information from payload\r\n  authenticateUser(user) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/authenticate', user, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/authenticate', user, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Route to call settings/pw. Used to changed the user's password.\r\n  changePW(email, oldpw, newpw) {\r\n    let headers = new Headers({'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/settings/pw', {email, oldpw, newpw}, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/settings/pw', {email, oldpw, newpw}, {headers: headers}).map(res => res.json());\r\n  }\r\n\r\n  //=========== Schedule =====================\r\n  // Check to see if the user is finalized\r\n  isFinalized(email): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/final', { email: email }, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/final', { email: email }, { headers: headers }).map(res => res.json());\r\n  }\r\n  \r\n  // Get the user's schedule\r\n  getSchedule(email): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/schedule', email, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/schedule', email, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Add a schedule item to the user's schedule\r\n  addScheduleItem(item) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/schedule/add', item, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/schedule/add', item, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Delete a schedule item from the user's schedule\r\n  deleteScheduleItem(item) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/schedule/delete', item, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/schedule/delete', item, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  //=========== Courses ======================\r\n  // Get a list of all the course names\r\n  getCourseNames() {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.get('http://localhost:3000/users/courses/names', { headers: headers }).map(res => res.json());\r\n    // return this.http.get('users/courses/names', { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Get all course information\r\n  getCourses(){\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.get('http://localhost:3000/users/courses', { headers: headers }).map(res => res.json());\r\n    // return this.http.get('users/courses', { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  //=========== User Token ===================\r\n  // Store user data into local storage\r\n  storeUserData(token, user){\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  // Load JSON web token\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  // Check to see if the token is not expired\r\n  loggedIn() {\r\n    // need to read id_token due to some update\r\n    return tokenNotExpired('id_token');\r\n  }\r\n\r\n  // Logout clears local storage and user information\r\n  logout() {\r\n    this.authToken=null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","//Service module for building, class, and classroom queries\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n//import {tokenNotExpired} from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class BuildingsService {\r\n  constructor(private http: Http) { }\r\n\r\n  //=========== Buildings ======================\r\n  // Get building based on name\r\n  getBuilding(name: String): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/buildings', {name}, { headers: headers }).map(res => res.json()).catch(this.handleError);\r\n    // return this.http.post('buildings', {name}, { headers: headers }).map(res => res.json()).catch(this.handleError);\r\n  }\r\n\r\n  // Get all buildings\r\n  getBuildings(): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.get('http://localhost:3000/buildings', { headers: headers }).map(res => res.json()).catch(this.handleError);\r\n    // return this.http.get('buildings', { headers: headers }).map(res => res.json()).catch(this.handleError);\r\n  }\r\n\r\n  // Get all building names\r\n  getBuildingNames(): Observable<any> {\r\n    let headers = new Headers({'Content-Type': 'application/json' });\r\n    return this.http.get('http://localhost:3000/buildings/names', { headers: headers }).map(res => res.json()).catch(this.handleError);\r\n    // return this.http.get('buildings/names', { headers: headers }).map(res => res.json()).catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || {};\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message: error.toString();\r\n    }\r\n    console.error(errMsg);\r\n    return Promise.reject(errMsg);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/buildings.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Injectable()\r\nexport class StudyBuddyService {\r\n  constructor(private http: Http) { }\r\n\r\n  // Service to call /add route. Adds a user to study buddy feature\r\n  joinStudyBuddies(email) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/studybuddies/add', { email: email },{ headers: headers }).map(res => res.json());\r\n    // return this.http.post('studybuddies/add', { email: email },{ headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Service to call /remove route. Removes a user from study buddy feature\r\n  unfinalize(email) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/studybuddies/remove', {email : email}, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('studybuddies/remove', email, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Service to call /get route. Get Study Buddies based on classes\r\n  getStudyBuddies(email): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/studybuddies/get', email, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('studyBuddies/get', email, { headers: headers }).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/studybuddy.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n  // How the user is communicating with the server\r\n  private socket: any;\r\n  // ID of the user that's going to be chatting with you\r\n  public ID: string = null;\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  // Create the room based on user pair\r\n  createRoom(sender: String, sendee: String) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let payload = {\r\n      user_1: sender,\r\n      user_2: sendee\r\n    }\r\n    return this.http.post('http://localhost:3000/messages/create', payload, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('messages/create', payload, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Tell the server to connect to server and join a room\r\n  joinRoom(ID: String) {\r\n    // Connect once while on that page\r\n    if (this.socket == null) {\r\n      this.socket = io.connect(\"http://localhost:3000/\");\r\n      // this.socket = io.connect(\"https://openclassroom.herokuapp.com/\");\r\n    }\r\n    this.socket.emit('join room', ID);\r\n  }\r\n\r\n  // Tell the server to send a message to those in the room\r\n  sendMessage(ID: String, sender: String, message: String) {\r\n    this.socket.emit('add message', ID, sender, message);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let payload = {\r\n      sender: sender,\r\n      msg: message,\r\n      ID: ID\r\n    }\r\n    return this.http.post('http://localhost:3000/messages/send', payload, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('messages/send', payload, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  getBuddyList(email: string) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/users/buddylist', { email: email }, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/buddylist', { email: email }, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  addBuddyListItem(email1: String, email2: String, user: String) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let payload = {\r\n      email1: email1,\r\n      email2: email2,\r\n      user: user\r\n    }\r\n    return this.http.post('http://localhost:3000/users/buddylist/add', payload, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('users/buddylist/add', payload, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  // Create an observable that will read off the next message when the user gets a message\r\n  getSubscription(): Observable<any> {\r\n    let observable = new Observable(observer => {\r\n      this.socket.on('message', (data) => {\r\n        observer.next(data);\r\n      })\r\n    })\r\n    return observable;\r\n  }\r\n\r\n  getMessages(ID: String) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/messages/get', { ID: ID }, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('messages/get', { ID: ID }, { headers: headers }).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/chat.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidateService {\r\n  constructor() { }\r\n\r\n  // Make sure the register information is all filled out\r\n  validateRegister(user) {\r\n    if(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined){\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Make sure it's a valid email\r\n  // Source: LOST\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/validate.service.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { BuildingsService } from '../../services/buildings.service';\r\n\r\n@Component({\r\n  selector: 'app-find-now',\r\n  templateUrl: './find-now.component.html',\r\n  styleUrls: ['./find-now.component.css']\r\n})\r\nexport class FindNowComponent implements OnInit {\r\n  // Value passed from Find-Home Component\r\n  @Input() name: string;\r\n\r\n  // Days the buildingService will query using\r\n  days = [\"x\", \"omon\", \"otue\", \"owed\", \"othu\", \"x\", \"x\"];\r\n  day: string;\r\n\r\n  // The list that will be displayed after population in the show function\r\n  roomsList = [];\r\n\r\n  // Notifies the HTML to display the error message when out of hours\r\n  show: boolean = false;\r\n\r\n  //Arguments to pass to roomInfo\r\n  buildingName: String = \"\";\r\n  roomNumber: String = \"\";\r\n\r\n  // Need to pass argument so it can be used in functions below\r\n  constructor(private buildingService: BuildingsService) { }\r\n\r\n  // Set the day once when navigating to the find classroom page\r\n  ngOnInit() {\r\n    this.day = this.days[new Date().getDay()]\r\n  }\r\n\r\n  /*\r\n  * Gets the rooms that are open and display when they are open\r\n  * 1) Not \"x\" and between 8AM and 10 PM?\r\n  * 2) Notify buildingService to get the buildings from MongoDB\r\n  * 3) Push room name if st >= timesJSON[time].st && (st+30) <= timesJSON[time].et\r\n  */\r\n  showNow() {\r\n    document.getElementById(\"nowTimes\").style.display = \"block\";\r\n\r\n    let st = new Date().getHours() * 60;\r\n    // 1) Not \"x\" and between 8 AM and 10 PM?\r\n    if (this.day != \"x\" && st >= 8*60 && st < 22*60)\r\n    {\r\n      // Clear roomsList for new list\r\n      this.roomsList = [];\r\n      // 2) Notify buildingService to get the buildings from MongoDB\r\n      this.buildingService.getBuilding(this.name).subscribe(buildingList => {\r\n        // roomsJSON = { name, mon, tue, wed, thu, omon, otue, owed, othu }\r\n        let roomsJSON = buildingList.OpenBuilding[0].rooms;\r\n        for (let room in roomsJSON)\r\n        {\r\n          // timesJSON = [{ name, sec, days, location, st, et }]\r\n          let timesJSON = roomsJSON[room][this.day];\r\n          for (let time in timesJSON)\r\n          {\r\n            // 3) Push room name if st >= timesJSON[time].st && (st+30) <= timesJSON[time].et\r\n            if (st >= timesJSON[time].st && (st+30) <= timesJSON[time].et)\r\n            {\r\n              this.roomsList.push({ name: roomsJSON[room].name, st: this.timeFormat(timesJSON[time].st), et: this.timeFormat(timesJSON[time].et) });\r\n            }\r\n          }\r\n        }\r\n        if (this.roomsList.length > 0) {\r\n          this.show = true;\r\n        }\r\n        else\r\n        {\r\n          this.show = false;\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.show = false;\r\n    }\r\n  }\r\n\r\n  // Adjust time in minutes to stringified time (No 12:00 AM)\r\n  timeFormat(time: number): string\r\n  {\r\n    // 12 AM\r\n    if (Math.trunc(time/60) == 0)\r\n    {\r\n      if (time%60 < 10)\r\n      {\r\n        return \"12:0\"+(time%60)+\" AM\";\r\n      }\r\n      else\r\n      {\r\n        return \"12:\"+(time%60)+\" AM\";\r\n      }\r\n    }\r\n    // 12 PM\r\n    else if (Math.trunc(time/60) == 12)\r\n    {\r\n      if (time%60 < 10)\r\n      {\r\n        return \"12:0\"+(time%60)+\" PM\";\r\n      }\r\n      else\r\n      {\r\n        return \"12:\"+(time%60)+\" PM\";\r\n      }\r\n    }\r\n    // 1 PM to 12 AM (exclusive)\r\n    if (time/60 > 12)\r\n    {\r\n      if (time%60 < 10)\r\n      {\r\n        return (Math.trunc(time/60)-12)+\":0\"+(time%60)+\" PM\";\r\n      }\r\n      else\r\n      {\r\n        return (Math.trunc(time/60)-12)+\":\"+(time%60)+\" PM\";\r\n      }\r\n    }\r\n    // 1 AM to 12 PM (exclusive)\r\n    else\r\n    {\r\n      if (time%60 < 10)\r\n      {\r\n        return Math.trunc(time/60)+\":0\"+(time%60)+\" AM\";\r\n      }\r\n      else\r\n      {\r\n        return Math.trunc(time/60)+\":\"+(time%60)+\" AM\";\r\n      }\r\n    }\r\n  }\r\n\r\n  // Display the room info\r\n  showRoom(room, number)\r\n  {\r\n    this.buildingName = room;\r\n    this.roomNumber = number;\r\n    document.getElementById(\"nowTimes\").style.display = \"none\";\r\n    document.getElementById(\"room2\").style.display = \"block\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/find-now/find-now.component.ts","//Service module for building, class, and classroom queries\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n//import {tokenNotExpired} from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class RoomInfoService {\r\n  constructor(private http: Http) { }\r\n\r\n  getRoomInfo(building, room) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/roominfo/getRoomInfo', { building, room }, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('roominfo/getRoomInfo', { building, room }, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  addComment(building, room, email, comment) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/roominfo/addComment', { building, room, email, comment }, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('roominfo/addComment', { building, room, email, comment }, { headers: headers }).map(res => res.json());\r\n  }\r\n\r\n  addVote(building, room, email, item, pos, nvote) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    return this.http.post('http://localhost:3000/roominfo/addVote', { building, room, email, item, pos, nvote }, { headers: headers }).map(res => res.json());\r\n    // return this.http.post('roominfo/addVote', { building, room, email, item, pos, nvote }, { headers: headers }).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/roominfo.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 120;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 120\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  ngOnInit() {\r\n    window.onscroll = this.scrollUp;\r\n  }\r\n\r\n  // Scroll back to the to if you click the To Top  \r\n  toTop() {\r\n    document.body.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n  }\r\n\r\n  // Determine whether or not to show the To Top button  \r\n  scrollUp() {\r\n    if (document.body.scrollTop > 30 || document.scrollingElement.scrollTop > 30) {\r\n      document.getElementById(\"to-top\").style.display = \"block\";\r\n    }\r\n    else {\r\n      document.getElementById(\"to-top\").style.display = \"none\";\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NouisliderComponent } from 'ng2-nouislider';\r\n\r\n// Automatically written in using \"ng g component ________\" in the components folder\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { CourseComponent } from './components/course/course.component';\r\nimport { DevguideComponent } from './components/devguide/devguide.component';\r\nimport { FindComponent } from './components/find/find.component';\r\nimport { FindHomeComponent } from './components/find-home/find-home.component';\r\nimport { FindNowComponent } from './components/find-now/find-now.component';\r\nimport { FindTimesComponent } from './components/find-times/find-times.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { RoomComponent } from './components/room/room.component';\r\nimport { ScheduleComponent } from './components/schedule/schedule.component';\r\nimport { StudybuddyComponent } from './components/studybuddy/studybuddy.component';\r\nimport { UsermanualComponent } from './components/usermanual/usermanual.component';\r\n\r\n// manually written after using ng g service _______\"\r\nimport { ValidateService } from './services/validate.service';\r\nimport { UserService } from './services/user.service';\r\nimport { BuildingsService } from './services/buildings.service';\r\nimport { ChatService } from './services/chat.service';\r\nimport { RoomInfoService } from './services/roominfo.service';\r\nimport { StudyBuddyService } from './services/studybuddy.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\n\r\n// Routes for the components (will be protected later)\r\nconst appRoutes: Routes = [\r\n  { path:'', component: HomeComponent },\r\n  { path:'register', component: RegisterComponent },\r\n  { path:'login', component: LoginComponent },\r\n  { path:'schedule', component: ScheduleComponent, canActivate:[AuthGuard] },\r\n  { path:'usermanual', component: UsermanualComponent },\r\n  { path:'devguide', component: DevguideComponent },\r\n  { path:'findclassroom', component: FindHomeComponent, canActivate:[AuthGuard] },\r\n  { path:'findclassroom/now', component: FindNowComponent },\r\n  { path:'findclassroom/building', component: FindComponent },\r\n  { path:'findclassroom/time', component: FindTimesComponent },\r\n  { path:'chat', component: ChatComponent },\r\n  { path:'studybuddy', component: StudybuddyComponent },\r\n    { path: 'settings', component: SettingsComponent },\r\n  { path:'**', redirectTo: '' }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    CourseComponent,\r\n    DevguideComponent,\r\n    FindComponent,\r\n    FindHomeComponent,\r\n    FindNowComponent,\r\n    FindTimesComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    NouisliderComponent,\r\n    RegisterComponent,\r\n    RoomComponent,\r\n    ScheduleComponent,\r\n    StudybuddyComponent,\r\n    UsermanualComponent,\r\n    SettingsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FlashMessagesModule\r\n  ],\r\n  providers: [ValidateService, UserService, AuthGuard, BuildingsService, ChatService, RoomInfoService, StudyBuddyService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  // You\r\n  user: String = JSON.parse(localStorage.getItem('user'));\r\n  // You are the sender\r\n  sender: String = this.user[\"name\"];\r\n  // You intially are talking to no one\r\n  sendee: String = null;\r\n  // The current room is where you and the sendee will talk\r\n  currentRoom: any;\r\n  // Holds the message logs\r\n  messages: any = [];\r\n  // What message is being sent when sending a message\r\n  message: String = null;\r\n  // Connection determines if you connected to the room\r\n  connection: any = null;\r\n  // Holds the listing of names of who you can talk to\r\n  buddyList: any = [];\r\n  // Flag for if you can show the back button (small screen: Show buddy list or message log)\r\n  showBack: boolean = false;\r\n\r\n  constructor(\r\n    private chatService: ChatService, \r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  ngOnInit() { \r\n    // Join room if you came from the study buddy page\r\n    if (this.chatService.ID != null) {\r\n      // If you clicked a study buddy, that info is put in chatService then received from chatservice to talk with that person\r\n      let payload = {\r\n        \"user\": this.chatService.ID[\"name\"],\r\n        \"email\": this.chatService.ID[\"email\"]\r\n      }\r\n      this.joinRoom(payload);\r\n      this.chatService.ID = null;\r\n    }\r\n    // Get the buddy list normally\r\n    this.chatService.getBuddyList(this.user['email']).subscribe((list) => {\r\n      for (let buddyIndex in list[0].buddyList) {\r\n        this.buddyList.push(list[0].buddyList[buddyIndex]);\r\n      }\r\n    })\r\n  }\r\n\r\n  // Leave any pre-existing rooms, then join a room\r\n  joinRoom(sendee) {\r\n    this.sendee = sendee.user;\r\n    this.showBack = true;\r\n    // Create room and get a room # to join (Back End)\r\n    this.chatService.createRoom(this.user[\"email\"], sendee.email).subscribe((out) => {\r\n      // Eliminate issue of room # too long\r\n      this.currentRoom = out[0]._id.substring(0, 24);\r\n      // Join Room (Back End)\r\n      this.chatService.joinRoom(this.currentRoom);\r\n      // Get Old Messages (Back End)\r\n      this.chatService.getMessages(this.currentRoom).subscribe((messages) => {\r\n        this.messages = []\r\n        for (let message in messages[0].messages) {\r\n          this.messages.push(messages[0].messages[message])\r\n        }\r\n      })\r\n      // Listen for Messages (Front End)\r\n      if (this.connection == null) {\r\n        this.connection = this.chatService.getSubscription().subscribe((payload) => {\r\n          this.messages.push(payload);\r\n        })\r\n      }\r\n      this.message = '';\r\n    })\r\n  }\r\n\r\n  // Only send a message if you've joined a room\r\n  sendMessage() {\r\n    // Make sure there is a connection, there is a message, and the message is not just white space\r\n    if (this.connection == null || this.sendee == null || this.message == null || this.message.trim().length == 0) {\r\n      this.flashMessage.show('Cannot send message. Did you join a room?', { cssClass: 'alert-danger', timeout: 3000 })\r\n    }\r\n    else {\r\n      // Send message (Front End & Back End)\r\n      this.chatService.sendMessage(this.currentRoom, this.sender, this.message).subscribe();\r\n    }\r\n    // Clear message\r\n    this.message='';\r\n  }\r\n\r\n  // Go back to the buddy list (small screen: Clears who you were talking)\r\n  back() {\r\n    this.sendee = null;\r\n    this.showBack = false;\r\n    this.messages = [];\r\n    this.message = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/chat/chat.component.ts","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n// NOTE: COURSE COMPONENT IS USED IN THE SCHEDULE COMPONENT AS A CHILD COMPONENT, \r\n// HENCE THE EMITS TO NOTIFY THE PARENT COMPONENT WHEN IT NEEDS TO TAKE BACK THE DISPLAY/CONTROL.\r\n// Source: https://angular.io/guide/component-interaction\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseComponent implements OnInit {\r\n  // 1st dropdown for course name\r\n  courseName: string\r\n  courseNameOptions: any[]\r\n\r\n  // Holds onto the collection that has the listing of the courses based on courseName\r\n  currCourseName: any[]\r\n\r\n  // 2nd dropdown for course number\r\n  courseNum: string\r\n  courseNumOptions: any[]\r\n  \r\n  // 3rd dropdown for course combination\r\n  courseChoice = null\r\n  courseChoiceOptions: any[]\r\n  \r\n  // Cache of all courses so the database only needs to be called once\r\n  courseAll: any[]\r\n\r\n  // Confirmation when adding / cancelling the add course\r\n  confirm: boolean = false\r\n  confirmMessage: string\r\n  @Output() afterConfirm: EventEmitter<any> = new EventEmitter<any>()\r\n\r\n  constructor(\r\n    private userService: UserService, \r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  // ========== Get Dropdown Options ===============\r\n  // 1) Get the course names\r\n  ngOnInit() {\r\n    this.courseNameOptions = []\r\n    this.userService.getCourses().subscribe(names => {\r\n      for (let name in names.Courses) \r\n      {\r\n        this.courseNameOptions.push(names.Courses[name].name)\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // 2) Get the course numbers\r\n  getCourseNumOptions() {\r\n    if (this.courseNameOptions != null)\r\n    {\r\n      // Reset the course number data that is displayed\r\n      this.courseNumOptions = []\r\n      this.courseChoiceOptions = null\r\n\r\n      // Populate current course array to point to specific course name\r\n      this.currCourseName = this.courseAll\r\n      for (let all in this.currCourseName) \r\n      {\r\n        // Once the particular course name is found, set the current course name\r\n        if (this.currCourseName[all].name == this.courseName)\r\n        {\r\n          this.currCourseName = this.currCourseName[all][\"courses\"]\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Populate the course num options from current course array\r\n      for (let courses in this.currCourseName)\r\n      {\r\n        this.courseNumOptions.push(this.currCourseName[courses][\"num\"])\r\n      }\r\n\r\n      // Make display sorted and unique\r\n      this.courseNumOptions = this.makeUnique(this.courseNumOptions)\r\n    }\r\n  }\r\n\r\n  // 3) Get the course options\r\n  getCourseChoiceOptions() {\r\n    if (this.courseNumOptions != null)\r\n    {\r\n      this.courseChoiceOptions = []\r\n      // Populate the choices the user can pick for the class they want to add\r\n      for (let courses in this.currCourseName)\r\n      {\r\n        if (this.currCourseName[courses].num == this.courseNum)\r\n        {\r\n          this.courseChoiceOptions.push(this.currCourseName[courses])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get all courses and puts them into courseAll as \"cache\" (on focus: When you select a course name)\r\n  cache() {\r\n    if (this.courseAll == null) \r\n    {\r\n      this.courseAll = [];\r\n      this.userService.getCourses().subscribe(all => {\r\n        for (let course in all.Courses) {\r\n          this.courseAll.push(all.Courses[course]);\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  // ========== Add ===============\r\n  // Switch back to Schedule component\r\n  onBack() {\r\n    this.afterConfirm.emit(false);\r\n  }\r\n  \r\n  // 4) On submit, show data you'd like to add. If missing data, then alert that more info is needed.\r\n  onSubmit() {\r\n    if (this.courseAll && this.courseNameOptions && this.courseNumOptions && this.courseChoiceOptions && this.courseChoice) \r\n    {\r\n      this.confirmMessage = this.courseName+\" \"+this.courseChoice.num+\" Class # \"+this.courseChoice.sec+\" \"+this.courseChoice.day+\" \"+this.courseChoice.time+\" \"+this.courseChoice.location; \r\n      this.confirm = true;\r\n    } \r\n    else \r\n    {\r\n      this.confirm = false;\r\n      this.flashMessage.show('Please complete all course fields.', {cssClass: 'alert-danger', timeout: 3000})\r\n    }\r\n  }\r\n\r\n  // Determine what to do if add or cancel\r\n  addClick(answer: boolean) {\r\n    if (answer) \r\n    {\r\n      // Add (Back End)\r\n      let coursePayload = {\r\n        email: JSON.parse(localStorage.getItem('user')).email,\r\n        crsID: this.courseChoice.sec\r\n      }\r\n      this.userService.addScheduleItem(coursePayload).subscribe((success) =>\r\n      {\r\n        // Don't Add (Front End)\r\n        if (success.length == 0)\r\n        {\r\n          this.flashMessage.show('Course already in schedule.', {cssClass: 'alert-danger', timeout: 3000})\r\n          this.afterConfirm.emit(false)\r\n        }\r\n        else\r\n        { // Add (Front End)\r\n          let add = {name: this.courseName, num: this.courseChoice.num, sec: this.courseChoice.sec, day: this.courseChoice.day, time: this.courseChoice.time, location: this.courseChoice.location, prof: this.courseChoice.prof }\r\n          this.afterConfirm.emit(add)\r\n          this.flashMessage.show('Course successfully added.', {cssClass: 'alert-success', timeout: 3000})\r\n        }\r\n      });\r\n    } \r\n    else \r\n    { // If cancel, then switch back to schedule component\r\n      this.afterConfirm.emit(false)\r\n    }\r\n  }\r\n  \r\n  // Take a SORTED array, determine unique values, and then return the array\r\n  // Source: http://rosettacode.org/wiki/Remove_duplicate_elements#JavaScript\r\n  makeUnique(arr) {\r\n    let tempArr = arr;\r\n    for (var i = 1; i < tempArr.length; ) \r\n    {\r\n      if (tempArr[i-1] === tempArr[i]) \r\n      {\r\n        tempArr.splice(i,1);\r\n      } \r\n      else \r\n      {\r\n        i++;\r\n      }\r\n    }\r\n    return tempArr;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/course/course.component.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-devguide',\r\n  templateUrl: './devguide.component.html',\r\n  styleUrls: ['./devguide.component.css']\r\n})\r\nexport class DevguideComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // NOT NECESSARILY NEEDED SINCE THE DEV GUIDE IS STATIC\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/devguide/devguide.component.ts","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FindComponent } from '../find/find.component';\r\nimport { BuildingsService } from '../../services/buildings.service';\r\nimport { FindNowComponent } from '../find-now/find-now.component';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-find-home',\r\n  templateUrl: './find-home.component.html',\r\n  styleUrls: ['./find-home.component.css'],\r\n  providers: [FindNowComponent] // Needed to function call the FindNowComponent\r\n})\r\nexport class FindHomeComponent implements OnInit {\r\n  // Chosen building to be queried (passed down components)\r\n  building: string = \"\";\r\n  // All building names possible\r\n  buildingNames = [];\r\n\r\n  // Access the used FindNowComponent to make the show function call\r\n  @ViewChild(FindNowComponent) nowComponent: FindNowComponent;\r\n\r\n  constructor(\r\n    private buildingService: BuildingsService, \r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  // 1) Display available building names\r\n  ngOnInit() {\r\n    this.buildingService.getBuildingNames().subscribe(names => {\r\n      for (let name in names.OpenBuilding) {\r\n        this.buildingNames.push(names.OpenBuilding[name].name);\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // 2) Display option buttons\r\n  displayButtons() {\r\n    if (document.getElementById(\"buttons\").style.display == \"none\")\r\n    {\r\n      // Show the day buttons\r\n      document.getElementById(\"buttons\").style.display = \"block\";\r\n      \r\n      // Hide the Find table\r\n      document.getElementById(\"table\").style.display = \"none\";\r\n      \r\n      // Hide the Find Times table\r\n      document.getElementById(\"table-2\").style.display = \"none\";\r\n      \r\n      // Hide the child component buttons\r\n      document.getElementById(\"all\").style.display = \"none\";\r\n      document.getElementById(\"now\").style.display = \"none\";\r\n      document.getElementById(\"times\").style.display = \"none\";\r\n      \r\n      // Hide the room info components\r\n      document.getElementById(\"room\").style.display = \"none\";\r\n      document.getElementById(\"room2\").style.display = \"none\";\r\n      document.getElementById(\"room3\").style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  // 3) Display button depending on id\r\n  displayOption(option: string) {\r\n    if (this.building == \"\") {\r\n      this.flashMessage.show('Please choose a building to find an Open Classroom.', {cssClass: 'alert-danger', timeout: 3000})\r\n    }\r\n    else {\r\n      if (document.getElementById(\"buttons\").style.display == \"block\")\r\n      {\r\n        // Hide day buttons after one is clicked\r\n        document.getElementById(\"buttons\").style.display = \"none\";\r\n        // Show the child component options\r\n        document.getElementById(option).style.display = \"block\";\r\n        if (option == \"now\")\r\n        {\r\n          // If child is \"Find Now\" call show now to display the time when it shows the Child Component\r\n          this.nowComponent.showNow();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/find-home/find-home.component.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { BuildingsService } from '../../services/buildings.service';\r\nimport { NouisliderComponent } from 'ng2-nouislider';\r\n\r\n@Component({\r\n  selector: 'app-find-times',\r\n  templateUrl: './find-times.component.html',\r\n  styleUrls: ['./find-times.component.css']\r\n})\r\nexport class FindTimesComponent implements OnInit {\r\n  // Value passed from Find-Home Component\r\n  @Input() name: string;\r\n  day: string;\r\n\r\n  // Times displayed on the front end but currently only does 8 (inclusive) to 10 (exclusive). This can be filtered down.\r\n  times = [\"12:00 AM\", \"12:30 AM\", \"1:00 AM\", \"1:30 AM\", \"2:00 AM\", \"2:30 AM\",\r\n            \"3:00 AM\", \"3:30 AM\", \"4:00 AM\", \"4:30 AM\", \"5:00 AM\", \"5:30 AM\",\r\n            \"6:00 AM\", \"6:30 AM\", \"7:00 AM\", \"7:30 AM\", \"8:00 AM\", \"8:30 AM\",\r\n            \"9:00 AM\", \"9:30 AM\", \"10:00 AM\", \"10:30 AM\", \"11:00 AM\", \"11:30 AM\",\r\n            \"12:00 PM\", \"12:30 PM\", \"1:00 PM\", \"1:30 PM\", \"2:00 PM\", \"2:30 PM\",\r\n            \"3:00 PM\", \"3:30 PM\", \"4:00 PM\", \"4:30 PM\", \"5:00 PM\", \"5:30 PM\",\r\n            \"6:00 PM\",\"6:30 PM\", \"7:00 PM\", \"7:30 PM\", \"8:00 PM\", \"8:30 PM\",\r\n            \"9:00 PM\", \"9:30 PM\", \"10:00 PM\", \"10:30 PM\", \"11:00 PM\", \"11:30 PM\"];\r\n  // Start and end values of the slider for AM/PM display\r\n  tstart: number = 16;\r\n  tend: number = 44;\r\n  // Start and end values for array display (in minutes)\r\n  start: number = 8*12;\r\n  end: number = 22*12;\r\n\r\n  // Configure the slider\r\n  // Source: http://tb.github.io/ng2-nouislider/\r\n  timeRange: number[];\r\n  timeSliderConfig: any = {\r\n    behaviour: 'drag',\r\n    connect: true, // Show color to show they're connected\r\n    start: [8, 22], // Start at the edges\r\n    keyboard: true,  // same as [keyboard]=\"true\"\r\n    step: 0.5, // What to go up by\r\n    margin: 0.5, // Make it so the smallest interval is 30 minutes apart\r\n    range: {\r\n      min: 8, // 8 AM start\r\n      max: 22 // 10 PM end\r\n    }\r\n  };\r\n\r\n  // The list of all values from the building chosen (\"cached\")\r\n  buildingList = null;\r\n  // The list that will be displayed after population in the show function\r\n  roomsList = [];\r\n\r\n  //Arguments to pass to roomInfo\r\n  buildingName: String = \"\";\r\n  roomNumber: String = \"\";\r\n\r\n  // Need to pass argument so it can be used in functions below\r\n  constructor(private buildingService:BuildingsService) { }\r\n\r\n  ngOnInit() { \r\n    document.getElementById('start').textContent  = this.times[this.tstart];\r\n    document.getElementById('end').textContent = this.times[this.tend];\r\n  }\r\n\r\n  /*\r\n  * Show the table based on the day (BUILDING name should be provided)\r\n  * 0) Reset the buildingList to null and set current day to \"\" if you \"switch to a different room\"\r\n  * 1) Is the day the same?\r\n  * 2) Is buildingList initialized to an array?\r\n  *    2a) Query the cache most of the time\r\n  *    3a) Create a temporary array and populate it with the start and end times per room\r\n  *    4a) Push temp array to the roomsList\r\n  * 3) Notify buildingService to get the buildings from MongoDB\r\n  * 4) Create a temporary array and populate it with the start and end times per room\r\n  * 5) Push temp array to the roomsList\r\n  * 6) Store in buildingList the query\r\n  */\r\n  show(day: string) {\r\n    document.getElementById(\"room3\").style.display = \"none\";\r\n\r\n    // 0) Re-initialize if navigate away from current page\r\n    if (document.getElementById(\"table-2\").style.display == \"none\")\r\n    {\r\n      this.buildingList = null;\r\n      this.day = \"\";\r\n    }\r\n    // 1) Only run once when same button is pressed multiple times\r\n    if (this.day != day)\r\n    {\r\n      // 2) Query the database once (\"cache the buildingList\")\r\n      if (this.buildingList == null)\r\n      {\r\n        // Clear roomsList for new list\r\n        this.roomsList = [];\r\n        // 3) Notify buildingService to get the buildings from MongoDB\r\n        this.buildingService.getBuilding(this.name).subscribe(buildingList => {\r\n          // roomsJSON = { name, mon, tue, wed, thu, omon, otue, owed, othu }\r\n          let roomsJSON = buildingList.OpenBuilding[0].rooms;\r\n          for (let room in roomsJSON)\r\n          {\r\n            // 4) Size of array for 8AM (inclusive) to 10 PM (exclusive)\r\n            let arr = new Array(288);\r\n            // timesJSON = [{ name, sec, days, location, st, et }]\r\n            let timesJSON = roomsJSON[room][day];\r\n            for (let time in timesJSON)\r\n            {\r\n              // Add 1's to values in the range of the times (increments of 5)\r\n              for (let i = timesJSON[time].st / 5 ; i < timesJSON[time].et / 5; i++)\r\n              {\r\n                arr[i] = 1;\r\n              }\r\n            }\r\n            // 5) Add to the roomsList\r\n            this.roomsList.push({ name: roomsJSON[room].name, room: arr});\r\n          }\r\n          // 6) Store in the buildingList (\"cache\")\r\n          this.buildingList = buildingList.OpenBuilding[0];\r\n          // Display table\r\n          document.getElementById(\"table-2\").style.display = \"block\";\r\n          // Set the day\r\n          this.day = day;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n      // 2a) Query the cache most of the time\r\n      else\r\n      {\r\n        // Clear roomsList for new list\r\n        this.roomsList = [];\r\n        // { name, mon, tue, wed, thu, omon, otue, owed, othu }\r\n        let roomsJSON = this.buildingList.rooms;\r\n        for (let room in roomsJSON)\r\n        {\r\n          // 3a) Size of array for 8AM (inclusive) to 10 PM (exclusive)\r\n          let arr = new Array(288);\r\n          // timesJSON = [{ name, sec, days, location, st, et }]\r\n          let timesJSON = roomsJSON[room][day];\r\n          for (let time in timesJSON)\r\n          {\r\n            for (let i = timesJSON[time].st / 5; i < timesJSON[time].et / 5; i++)\r\n            {\r\n              arr[i] = 1;\r\n            }\r\n          }\r\n          // 4a) Add to the roomsList\r\n          this.roomsList.push({ name: roomsJSON[room].name, room: arr});\r\n        }\r\n        this.day = day;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Jon C's algorithm for displaying the time on the time cell\r\n  displayToolTip(time)\r\n  {\r\n    var  minutes = time*5;//since we have minutes in 5 minute chunks\r\n    minutes += this.start*5;//offset of start value * 5\r\n    time = minutes;//set original value of time\r\n    var t;\r\n\r\n    if(minutes>=780)    {\r\n      minutes-=720;//if its 13 o'clock you take off 12 hours or 720 mins\r\n    }\r\n    t = (minutes - minutes%60)/60 + \":\";//calculating hours\r\n\r\n    if(minutes%60<10)    {//formating minutes toFixed and to Prevision dont work\r\n      t += \"0\" + time%60;\r\n    }else    {\r\n      t += time%60;\r\n    }\r\n\r\n    if(time>=720)    {//setting AM/PM based on the original time\r\n      t+= \" PM\";\r\n    }\r\n    else    {\r\n      t+= \" AM\";\r\n    }\r\n\r\n    return t;\r\n  }\r\n\r\n  // On slider change, set start and end times for the times\r\n  onChange(value: number[]) {\r\n    this.start = value[0]*12;\r\n    this.end = value[1]*12;\r\n    this.tstart = value[0]*2;\r\n    this.tend = value[1]*2;\r\n    document.getElementById('start').textContent  = this.times[this.tstart];\r\n    document.getElementById('end').textContent = this.times[this.tend];\r\n  }\r\n\r\n  // Display the room info\r\n  getRoomInfo(building_name, room_num)\r\n  {\r\n    var email =  JSON.parse(localStorage.getItem('user')).email\r\n\r\n    //set new inputs\r\n    this.buildingName = building_name;\r\n    this.roomNumber = room_num;\r\n\r\n    //hide table and show room\r\n    document.getElementById(\"table-2\").style.display = \"none\";\r\n    document.getElementById(\"room3\").style.display = \"block\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/find-times/find-times.component.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { BuildingsService } from '../../services/buildings.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n//import { RoomComponent } from '../room/room.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-find',\r\n  templateUrl: './find.component.html',\r\n  styleUrls: ['./find.component.css']\r\n})\r\n\r\nexport class FindComponent implements OnInit {\r\n  // Values that are passed from Find-Home Component\r\n  @Input() name: string;\r\n  day: string;\r\n  // Values passed to room components\r\n  buildingName: String = \"\";\r\n  roomNumber: String = \"\";\r\n\r\n  // Times displayed on the front end but currently does 8 (inclusive) to 10 (exclusive). This can be filtered down.\r\n  times = [\"8:00 AM\", \"9:00 AM\",\r\n          \"10:00 AM\", \"11:00 AM\", \"12:00 PM\",\r\n          \"1:00 PM\", \"2:00 PM\", \"3:00 PM\",\r\n          \"4:00 PM\", \"5:00 PM\", \"6:00 PM\",\r\n          \"7:00 PM\", \"8:00 PM\", \"9:00 PM\"];\r\n\r\n  // The list of all values from the building chosen (\"cached\")\r\n  buildingList = null;\r\n  // The list that will be displayed after population in the show function\r\n  roomsList = [];\r\n\r\n  // Need to pass arguments so it can be used in functions below\r\n  constructor(\r\n    private buildingService: BuildingsService,\r\n    private router: Router,\r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  /*\r\n  * Show the table based on the day (BUILDING name should be provided)\r\n  * 0) Reset the buildingList to null and set current day to \"\" if you \"switch to a different room\"\r\n  * 1) Is the day the same?\r\n  * 2) Is buildingList initialized to an array?\r\n  *    2a) Query the cache most of the time\r\n  *    3a) Create a temporary array and populate it with the start and end times per room\r\n  *    4a) Push temp array to the roomsList\r\n  * 3) Notify buildingService to get the buildings from MongoDB\r\n  * 4) Create a temporary array and populate it with the start and end times per room\r\n  * 5) Push temp array to the roomsList\r\n  * 6) Store in buildingList the query\r\n  */\r\n  show(day: string) {\r\n    document.getElementById(\"room\").style.display = \"none\";\r\n\r\n    // 0) Re-initialize if navigate away from current page\r\n    if (document.getElementById(\"table\").style.display == \"none\")\r\n    {\r\n      this.buildingList = null;\r\n      this.day = \"\";\r\n    }\r\n    // 1) Only run once when same button is pressed multiple times\r\n    if (this.day != day)\r\n    {\r\n      // 2) Query the database once (\"cache the buildingList\")\r\n      if (this.buildingList == null)\r\n      {\r\n        // Clear roomsList for new list\r\n        this.roomsList = [];\r\n        // 3) Notify buildingService to get the buildings from MongoDB\r\n        this.buildingService.getBuilding(this.name).subscribe(buildingList => {\r\n          // roomsJSON = { name, mon, tue, wed, thu, omon, otue, owed, othu }\r\n          let roomsJSON = buildingList.OpenBuilding[0].rooms;\r\n          for (let room in roomsJSON)\r\n          {\r\n            // 4) Size of array for 8AM (inclusive) to 10 PM (exclusive)\r\n            let arr = new Array(288);\r\n            // timesJSON = [{ name, sec, days, location, st, et }]\r\n            let timesJSON = roomsJSON[room][day];\r\n            for (let time in timesJSON)\r\n            {\r\n              // Add 1's to values in the range of the times (increments of 5)\r\n              for (let i = timesJSON[time].st / 5 ; i < timesJSON[time].et / 5; i++)\r\n              {\r\n                arr[i] = 1;\r\n              }\r\n            }\r\n            // 5) Add to the roomsList\r\n            this.roomsList.push({ name: roomsJSON[room].name, room: arr});\r\n          }\r\n          // 6) Store in the buildingList (\"cache\")\r\n          this.buildingList = buildingList.OpenBuilding[0];\r\n          // Display table\r\n          document.getElementById(\"table\").style.display = \"block\";\r\n          // Set the day\r\n          this.day = day;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n      // 2a) Query the cache most of the time\r\n      else\r\n      {\r\n        // Clear roomsList for new list\r\n        this.roomsList = [];\r\n        // { name, mon, tue, wed, thu, omon, otue, owed, othu }\r\n        let roomsJSON = this.buildingList.rooms;\r\n        for (let room in roomsJSON)\r\n        {\r\n          // 3a) Size of array for 8AM (inclusive) to 10 PM (exclusive)\r\n          let arr = new Array(288);\r\n          // timesJSON = [{ name, sec, days, location, st, et }]\r\n          let timesJSON = roomsJSON[room][day];\r\n          for (let time in timesJSON)\r\n          {\r\n            for (let i = timesJSON[time].st / 5; i < timesJSON[time].et / 5; i++)\r\n            {\r\n              arr[i] = 1;\r\n            }\r\n          }\r\n          // 4a) Add to the roomsList\r\n          this.roomsList.push({ name: roomsJSON[room].name, room: arr});\r\n        }\r\n        this.day = day;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Jon C's algorithm for displaying the time on the time cell\r\n  displayToolTip(time)\r\n  {\r\n    var  minutes = time*5;//since we have minutes in 5 minute chunks\r\n    minutes += 480;//offset of 8 AM need to add 8 hours\r\n    time = minutes;//set original value of time\r\n    var t;\r\n\r\n\r\n    if(minutes>=780)    {\r\n      minutes-=720;//if its 13 o'clock you take off 12 hours or 720 mins\r\n    }\r\n    t = (minutes - minutes%60)/60 + \":\";//calculating hours\r\n\r\n    if(minutes%60<10)    {//formating minutes toFixed and to Prevision dont work\r\n      t += \"0\" + time%60;\r\n    }else    {\r\n      t += time%60;\r\n    }\r\n\r\n    if(time>=720)    {//setting AM/PM based on the original time\r\n      t+= \" PM\";\r\n    }\r\n    else    {\r\n      t+= \" AM\";\r\n    }\r\n\r\n    return t;\r\n  }\r\n\r\n  getRoomInfo(building_name, room_num)\r\n  {\r\n    var email =  JSON.parse(localStorage.getItem('user')).email\r\n\r\n    //set new inputs\r\n    this.buildingName = building_name;\r\n    this.roomNumber = room_num;\r\n\r\n    //hide table and show room\r\n    document.getElementById(\"table\").style.display = \"none\";\r\n    document.getElementById(\"room\").style.display = \"block\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/find/find.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n    // NOT NECESSARILY NEEDED SINCE THE HOME PAGE IS \"STATIC\"\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // Send email and password combination to the database and navigate based on if it successfully matched an email and password combination.\r\n  onLoginSubmit() {\r\n    const user = {\r\n      email: this.email,\r\n      password: this.password\r\n    }\r\n\r\n    this.userService.authenticateUser(user).subscribe(data => {\r\n      // If sucessful, store user data into JSON web token\r\n      if (data.success) {\r\n        this.userService.storeUserData(data.token, data.user);\r\n        this.flashMessage.show('Login Successful', { cssClass: 'alert-success', timeout: 3000 })\r\n        this.router.navigate(['schedule']);\r\n      }\r\n      else {\r\n        // If unsuccessful, show the email and password combination was not correct\r\n        this.flashMessage.show('No Match with that Email and Password.', { cssClass: 'alert-danger', timeout: 3000 })\r\n      }\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { ValidateService } from '../../services/validate.service';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  show: boolean = false; // Initially show hidden\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private flashMessage: FlashMessagesService,\r\n    private validateService: ValidateService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // Change the state of dropdown\r\n  toggle() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  // Line items call hide(), then toggle(), so to make sure it's false, start off true\r\n  hide() {\r\n    this.show = true;\r\n  }\r\n\r\n  // On logout, show log out and navigate back to login\r\n  onLogoutClick() {\r\n    this.userService.logout();\r\n    this.flashMessage.show('You have logged out.', { cssClass:'alert-success', timeout:3000 });\r\n    this.router.navigate(['/'])\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  name: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n  regdate: Date;\r\n\r\n  // What services that are being used to register\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessage: FlashMessagesService,\r\n    private userService: UserService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  //This function checks to make sure all data is good when trying to register for openclassroom\r\n  onRegisterSubmit() {\r\n    const user = {\r\n      name: this.name,\r\n      email: this.email,\r\n      username: this.username,\r\n      password: this.password,\r\n      regdate: new Date()\r\n    }\r\n\r\n    // Required Fields\r\n    if (!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.show('Please fill in all fields.', { cssClass: 'alert-danger', timeout: 3000 });\r\n      return false;\r\n    }\r\n\r\n    // Validate Email\r\n    if (!this.validateService.validateEmail(user.email)) {\r\n      this.flashMessage.show('Please use a valid email.', { cssClass: 'alert-danger', timeout: 3000 });\r\n      return false;\r\n    }\r\n\r\n    // Register User using inputted user data\r\n    this.userService.registerUser(user).subscribe(data => {\r\n      // If successful go to login page\r\n      if (data.success) {\r\n        this.flashMessage.show('You registered! Please enter your credentials to log in.', { cssClass: 'alert-success', timeout: 3000 });\r\n        this.router.navigate(['/login']);\r\n\r\n      }\r\n      else {\r\n        // If unsuccessful, show email is already in use\r\n        this.flashMessage.show('Email is already in use.', { cssClass: 'alert-danger', timeout: 3000 });\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/register/register.component.ts","import { Component, OnChanges, Input } from '@angular/core';\r\nimport { RoomInfoService } from '../../services/roominfo.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-room',\r\n  templateUrl: './room.component.html',\r\n  styleUrls: ['./room.component.css']\r\n})\r\nexport class RoomComponent implements OnChanges {\r\n  // Inputs from find components\r\n  @Input() building: string = \"\";\r\n  @Input() room: string = \"\";\r\n\r\n  // Data structure\r\n  rooms = null;\r\n  loaded: boolean = false;\r\n  empMon: boolean;\r\n  tuesday: boolean;\r\n  wednesday: boolean;\r\n  thursday: boolean;\r\n\r\n  //other data do send in routes\r\n  comment: string;\r\n  email: JSON = JSON.parse(localStorage.getItem('user'))[\"email\"]\r\n\r\n  constructor(\r\n    private roomInfoService: RoomInfoService,\r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  //we use ngOnChanges() to dynamically get the room information from the find-classroom components\r\n  //otherwise there would be issues loading each room from the other component\r\n  ngOnChanges() {\r\n    this.roomInfoService.getRoomInfo(this.building, this.room).subscribe(roomInfo => {\r\n      if (roomInfo != null)\r\n      {\r\n        this.rooms = roomInfo;\r\n        this.loaded = true;\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  //format time as time is provide in minutes otherwise\r\n  timeFormat(time)\r\n  {\r\n    var t;\r\n    var minutes = time;\r\n\r\n    if (minutes>=780)    {\r\n      minutes-=720;//if its 13 o'clock you take off 12 hours or 720 mins\r\n    }\r\n    t = (minutes - minutes%60)/60 + \":\";//calculating hours\r\n\r\n    if (minutes%60==0)    {//formating minutes toFixed and to Prevision dont work\r\n      t += \"00\";\r\n    }\r\n    else {\r\n      t += time%60;\r\n    }\r\n\r\n    if (time>720)    {//setting AM/PM based on the original time\r\n      t+= \" PM\";\r\n    }\r\n    else {\r\n      t+= \" AM\";\r\n    }\r\n    return t;\r\n  }\r\n\r\n  //used to handle votes performed on the front end.\r\n  vote(item, pos, nVote)\r\n  {\r\n    this.roomInfoService.addVote(this.building, this.room, this.email, item, pos, nVote).subscribe(data => {\r\n      if (data.success) {\r\n        //TODO update room info here instead since there is no actual success message from the route\r\n      }\r\n      else {\r\n        //we call update this.rooms so we have the newest data from the databse after a vote goes through\r\n        //other wise you will need to refresh the page to see any changes.\r\n        this.roomInfoService.getRoomInfo(this.building, this.room).subscribe(roomInfo => {\r\n          this.rooms = roomInfo;\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  //used to submit a comment to the database when one is sent from the front end.\r\n  onCommentSubmit()\r\n  {\r\n    //if the comment box is empty do not allow them to submit anything and show an error flash message.\r\n    if (this.comment == \"\") {\r\n      this.flashMessage.show('Please enter a comment before submitting', {cssClass: 'alert-danger', timeout: 3000});\r\n    }\r\n    else {\r\n      this.roomInfoService.addComment(this.building, this.room, this.email, this.comment).subscribe(data => {\r\n        if (data.success) {\r\n          //TODO update room info here instead same issue as above\r\n        }\r\n        else {\r\n          //we call update this.rooms so we have the newest data from the databse after a user comments on the room.\r\n          //other wise you will need to refresh the page to see any changes.\r\n          this.roomInfoService.getRoomInfo(this.building, this.room).subscribe(roomInfo => {\r\n            this.rooms = roomInfo;\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          });\r\n        }\r\n      })\r\n    }\r\n    //this is linked to the text field so we reset it here\r\n    this.comment = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/room/room.component.ts","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { StudyBuddyService } from '../../services/studybuddy.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.css']\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n  // You\r\n  user: JSON = JSON.parse(localStorage.getItem('user'))\r\n  // Your schedule\r\n  schedule = null;\r\n  // Boolean for if you are displaying the schedule\r\n  home: boolean = true;\r\n  // Boolean for if you are attempting to add a course\r\n  add: boolean = false;\r\n  // Boolean for if you are attempting to delete a course\r\n  delete: boolean = false;\r\n  // Boolean for if you are finalizing a schedule\r\n  finalize: boolean = false;\r\n  // Boolean for if the schedule is finalized or not\r\n  isFinalized: boolean = false;\r\n  // Information about the course you are about to delete\r\n  deleteMessage: String;\r\n  // Item that is in the process of being deleted\r\n  currItem = null;\r\n\r\n  constructor(\r\n    private userService: UserService, \r\n    private studyBuddyService: StudyBuddyService, \r\n    private flashMessage: FlashMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.schedule = []\r\n    let email = this.user[\"email\"]\r\n\r\n    // Get schedule\r\n    this.userService.getSchedule({email: email}).subscribe(schedule => {\r\n      this.schedule = schedule.schedule\r\n      this.schedule.sort(this.sortByCourseName)\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    })\r\n    \r\n    // Check to see if finalized\r\n    this.userService.isFinalized(this.user[\"email\"]).subscribe((finalized) => {\r\n      this.isFinalized= finalized[0].schedFinal\r\n    });\r\n  }\r\n\r\n  // ========== Add ==================\r\n  // 1) Go to add\r\n  clickAdd() {\r\n    this.add = true;\r\n  }\r\n\r\n  // 2) Determine if you add or cancel\r\n  onCourseAdd(confirm) {\r\n    if (confirm)\r\n    {\r\n      this.schedule.push(confirm)\r\n      this.schedule.sort(this.sortByCourseName)\r\n    }\r\n    this.add = false;\r\n    this.delete = false\r\n    this.home = true;\r\n  }\r\n  \r\n  // ========== Delete ===============\r\n  // 1) Go to delete\r\n  clickDelete(index) {\r\n    this.delete = true;\r\n    // Create Message\r\n    let course = this.schedule[index]\r\n    let courseChoice = course;\r\n    this.deleteMessage = course.name+\" \"+courseChoice.num+\" Class # \"+courseChoice.sec+\" \"+courseChoice.day+\" \"+courseChoice.time+\" \"+courseChoice.location;\r\n    // In preparation for delete\r\n    this.currItem = { index: index, crsID: courseChoice.sec};\r\n  }\r\n\r\n  // 2) Determine if you delete or cancel\r\n  onCourseDelete(confirm: boolean) {\r\n    if (confirm) \r\n    {\r\n      let coursePayload = {\r\n        email: JSON.parse(localStorage.getItem('user')).email,\r\n        crsID: this.currItem.crsID\r\n      }\r\n      // Delete on back end\r\n      this.userService.deleteScheduleItem(coursePayload).subscribe();\r\n      // Delete on front end\r\n      this.schedule.splice(this.currItem.index, 1)\r\n      this.schedule.sort(this.sortByCourseName)\r\n      this.flashMessage.show('Course successfully removed.', {cssClass: 'alert-success', timeout: 3000})\r\n    }\r\n    this.delete = false;\r\n  }\r\n\r\n  clickFinalize() {\r\n    // If the length is greater than 0, you can finalize\r\n    if (this.schedule.length > 0) {\r\n      this.finalize = true;\r\n    }\r\n    else {\r\n      // If the length is <= 0, you cannot finalize\r\n      this.flashMessage.show('Cannot finalize course schedule.', {cssClass: 'alert-danger', timeout: 3000})\r\n    }\r\n  }\r\n\r\n  onFinalize(confirm: boolean) {\r\n    // On finalize confirmation screen, finalize or don't finalize depending on the button chosen\r\n    if (confirm) {\r\n      this.studyBuddyService.joinStudyBuddies(this.user[\"email\"]).subscribe();\r\n    }\r\n    this.isFinalized = confirm;\r\n    this.finalize = false;\r\n  }\r\n\r\n  // Sort by Course, then Course Num, then by Course Sec\r\n  sortByCourseName(a,b) {\r\n    // Name (ex. CECS)\r\n    if (a.name == b.name)\r\n    {\r\n      // Number (ex. CECS 101 vs CECS 102)\r\n      if (a.num == b.num)\r\n      {\r\n        return a.sec-b.sec\r\n      }\r\n      else\r\n      {\r\n        return a.num > b.num\r\n      }\r\n    }\r\n    else\r\n    {\r\n      return a.name > b.name\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/schedule/schedule.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { StudyBuddyService } from '../../services/studybuddy.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\n\r\nexport class SettingsComponent implements OnInit {\r\n    user: JSON = JSON.parse(localStorage.getItem('user'))\r\n    show: boolean = false;\r\n    isFinalized: boolean;\r\n    oldpw: String;\r\n    newpw: String;\r\n    username: String;\r\n    email: String;\r\n    x: String\r\n\r\n    constructor(private userService: UserService,\r\n                private studyBuddyService: StudyBuddyService,\r\n                private flashMessage: FlashMessagesService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.username = this.user[\"username\"];\r\n        this.email = this.user[\"email\"];\r\n\r\n        //calls isFinalized service to disable/activate checkbox button\r\n        this.userService.isFinalized(this.email).subscribe( data => {\r\n            this.isFinalized = data[0].schedFinal;\r\n        })\r\n    }\r\n\r\n    /**Toggles the view for hidable content\r\n     *\r\n     */\r\n    toggleView(): void {\r\n        if (this.show === false) {\r\n            this.show = true;\r\n        } else {\r\n            this.show = false;\r\n        }\r\n    }\r\n\r\n    /** Calls changePW service to change the user's password. Returns flash message for success or failure\r\n     *\r\n     */\r\n    onSubmitPW(): void {\r\n        if (this.oldpw == \"\" || this.newpw == \"\") {\r\n            this.flashMessage.show('Please enter all fields before submitting', {\r\n                cssClass: 'alert-danger',\r\n                timeout: 3000\r\n            });\r\n        }\r\n        else {\r\n            this.userService.changePW(this.email, this.oldpw, this.newpw).subscribe(data => {\r\n                if (data.success) {\r\n                    this.flashMessage.show('Password successfully changed.', {\r\n                        cssClass: 'alert-success',\r\n                        timeout: 3000\r\n                    });\r\n                    this.show = false;\r\n                }\r\n                else if (!data.success) {\r\n                    this.flashMessage.show('Incorrect password!', {cssClass: 'alert-danger', timeout: 3000});\r\n                }\r\n            })\r\n        }\r\n        this.oldpw = '';\r\n        this.newpw = '';\r\n    }\r\n\r\n    /** Used to call unfinalize service. If successful, flash message notifies user.\r\n     *\r\n     */\r\n    unfinalize(): void {\r\n        this.studyBuddyService.unfinalize(this.email).subscribe(data => {\r\n            if (data.success) {\r\n                this.flashMessage.show('Schedule has been opened for modification! Please finalize your schedule in the Schedule tab!', {\r\n                    cssClass: 'alert-success',\r\n                    timeout: 3000\r\n                });\r\n                this.isFinalized = false;\r\n            }\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/settings.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { StudyBuddyService } from '../../services/studybuddy.service';\r\n\r\n@Component({\r\n  selector: 'app-studybuddy',\r\n  templateUrl: './studybuddy.component.html',\r\n  styleUrls: ['./studybuddy.component.css']\r\n})\r\nexport class StudybuddyComponent implements OnInit {\r\n  //get user from local storage and set up all data needed for the component\r\n  user: JSON = JSON.parse(localStorage.getItem('user'));\r\n  buddy: string = null;\r\n  email: string;\r\n  schedule = null;\r\n  buddies = null;\r\n  courseBuddies = null;\r\n  loaded: boolean = false;\r\n  isFinalized : boolean = false;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private chatService: ChatService,\r\n    private studyBuddyService: StudyBuddyService) { }\r\n\r\n  ngOnInit() {\r\n    this.schedule = []\r\n    this.email = this.user[\"email\"];\r\n\r\n    //calls isFinalized in user service to prevent users from using this when the data is not finalized\r\n    this.userService.isFinalized(this.email).subscribe( data => {\r\n        this.isFinalized = data[0].schedFinal;\r\n        //if not finalized display warning to user.\r\n        if(!this.isFinalized){\r\n          document.getElementById(\"warning\").style.display = \"inline-block\";\r\n        }\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    });\r\n\r\n    //TODO: Use the course names once syed provides them instead of using the schedule\r\n    this.userService.getSchedule({email: this.email}).subscribe(schedule => {\r\n      this.schedule = schedule.schedule\r\n      this.schedule.sort(this.sortByCourseName)\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    });\r\n\r\n    // Generate buddies for each course\r\n    this.studyBuddyService.getStudyBuddies({email: this.email}).subscribe(buddies => {\r\n\r\n      //This should be handled in the err, but routes do not proved a proper err\r\n      if(buddies.error == \"Nothing Found in SB\") {\r\n        document.getElementById(\"cronjobwait\").style.display = \"inline-block\";\r\n        document.getElementById(\"buddies\").style.display = \"none\";\r\n      }\r\n      //if it's not an error we load buddies\r\n      else\r\n      {\r\n        this.courseBuddies = buddies[0];\r\n        this.loaded = true;\r\n        this.buddies=buddies;\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  // Used to sort the schedule by coure names\r\n  // Sort by Course, then Course Num, then by Course Sec\r\n  sortByCourseName(a,b) {\r\n    // Name (ex. CECS)\r\n    if (a.name == b.name)\r\n    {\r\n      // Number (ex. CECS 101 vs CECS 102)\r\n      if (a.num == b.num)\r\n      {\r\n        return a.sec-b.sec\r\n      }\r\n      else\r\n      {\r\n        return a.num > b.num\r\n      }\r\n    }\r\n    else\r\n    {\r\n      return a.name > b.name\r\n    }\r\n  }\r\n\r\n  //Shows the buddies depending on the index of the class that is chosen\r\n  //TODO fix this when routes provide course name ex 491b\r\n  showBuddies()\r\n  {\r\n    //get index of the select menu and set our buddyDisplay to that index of studyBuddies\r\n    var index = (<HTMLSelectElement>document.getElementById('courseSelect')).selectedIndex - 1;\r\n    this.courseBuddies = this.buddies[index];\r\n\r\n    //if there are no buddies display text indicating there are no buddies\r\n    if(this.courseBuddies.buddies.length < 1)    {\r\n      document.getElementById(\"buddylist\").style.display = \"none\";\r\n      document.getElementById(\"nobuddies\").style.display = \"inline-block\";\r\n    }\r\n    //otherwise display the list of buddies\r\n    else\r\n    {\r\n      document.getElementById(\"buddylist\").style.display = \"inline-block\";\r\n      document.getElementById(\"nobuddies\").style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  //open message thread to buddy\r\n  message(buddyIndex)\r\n  {\r\n    let buddy = this.courseBuddies.buddies[buddyIndex];\r\n    this.chatService.addBuddyListItem(this.user[\"email\"], buddy.email, buddy.name).subscribe();\r\n    this.chatService.addBuddyListItem(buddy.email, this.user[\"email\"], this.user[\"username\"]).subscribe();\r\n    this.buddy = buddy;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.buddy != null) {\r\n      this.chatService.ID = this.buddy;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/studybuddy/studybuddy.component.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-usermanual',\r\n  templateUrl: './usermanual.component.html',\r\n  styleUrls: ['./usermanual.component.css']\r\n})\r\nexport class UsermanualComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermanual/usermanual.component.ts","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport {UserService} from '../services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router) { }\r\n\r\n  canActivate() {\r\n    if(this.userService.loggedIn()){\r\n      return true\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".main-grid {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2.5% 95% 2.5%;\\r\\n        grid-template-columns: 2.5% 95% 2.5%;\\r\\n    -ms-grid-rows: 50px 63px 100%;\\r\\n        grid-template-rows: 50px 63px 100%;\\r\\n    grid-template-areas: \\r\\n        \\\"nav    nav     nav\\\"\\r\\n        \\\"fm     fm      fm\\\"\\r\\n        \\\".      ro      .\\\";\\r\\n    padding-bottom: 50px;\\r\\n}\\r\\n\\r\\n.main-grid app-navbar {\\r\\n    grid-area: nav;\\r\\n}\\r\\n\\r\\n.main-grid flash-messages {\\r\\n    grid-area: fm;\\r\\n}\\r\\n\\r\\n/* Used to circumvent router-outlet issue */\\r\\n.main-grid div {\\r\\n    grid-area: ro;\\r\\n    /* border: 2px black solid; */\\r\\n}\\r\\n\\r\\n/* Source: https://www.w3schools.com/howto/howto_js_scroll_to_top.asp */\\r\\n.button-to-top {\\r\\n    display: none; /* Hidden by default */\\r\\n    position: fixed; /* Fixed/sticky position */\\r\\n    bottom: 20px; /* Place the button at the bottom of the page */\\r\\n    right: 20px; /* Place the button 30px from the right */\\r\\n    z-index: 100; /* Make sure it does not overlap */\\r\\n    border: none; /* Remove borders */\\r\\n    outline: none; /* Remove outline */\\r\\n    background-color: #edaa00; /* Set a background color */\\r\\n    color: #333333; /* Text color */\\r\\n    padding-right: 20px;\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n    padding-left: 20px;\\r\\n    border-radius: 10px; /* Rounded corners */\\r\\n    opacity: 0.6;\\r\\n}\\r\\n\\r\\n.button-to-top:hover {\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.button-to-top:active {\\r\\n    opacity: 0.8;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 217\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* Formatting of the user list area */\\r\\n.msglist {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    grid-area: msglist;\\r\\n    -ms-grid-columns: 100%;\\r\\n        grid-template-columns: 100%;\\r\\n    -ms-grid-rows: 50px auto;\\r\\n        grid-template-rows: 50px auto;\\r\\n    grid-template-areas: \\r\\n        \\\"msglist-title\\\"\\r\\n        \\\"msglist-users\\\";\\r\\n    min-width: 225px;\\r\\n}\\r\\n\\r\\n.msglist-title {\\r\\n    grid-area: msglist-title;\\r\\n    background: #edaa00;\\r\\n    border: 1px black solid;\\r\\n    color: black;\\r\\n    font-size: 30px;\\r\\n    overflow: auto;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n/* List of users */\\r\\n.msglist-users {\\r\\n    grid-area: msglist-users;\\r\\n    background: white;\\r\\n    border: 1px black solid;\\r\\n    height: 450px;\\r\\n    list-style: none;\\r\\n    margin: 0 !important;\\r\\n    max-height: 450px;\\r\\n    overflow: auto;\\r\\n    padding: 0 !important; \\r\\n}\\r\\n\\r\\n.msglist-user {\\r\\n    border: 0 !important;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n}\\r\\n\\r\\n.msglist-btn {\\r\\n    border-bottom: 1px gray solid;\\r\\n    color: black;\\r\\n    height: 100%;\\r\\n    padding: 10px 0 10px 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/* Formatting of the chat area */\\r\\n.chat {\\r\\n    grid-area: chat;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 100%;\\r\\n        grid-template-columns: 100%;\\r\\n    -ms-grid-rows: 50px auto 50px;\\r\\n        grid-template-rows: 50px auto 50px;\\r\\n    grid-template-areas: \\r\\n        \\\"chat-title\\\"\\r\\n        \\\"chat-logs\\\"\\r\\n        \\\"chat-form\\\";\\r\\n    min-width: 300px;\\r\\n}\\r\\n\\r\\n/* Title area of the chat */\\r\\n.chat-title {\\r\\n    grid-area: chat-title;\\r\\n    background: #edaa00;\\r\\n    border: 1px black solid;\\r\\n    color: black;\\r\\n    font-size: 30px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.back {\\r\\n    float: left;\\r\\n    background: #edaa00;\\r\\n    border-bottom: 1.5px black solid;\\r\\n    border-right: 1px black solid;\\r\\n    min-width: 75px;\\r\\n    height: 50px;\\r\\n    margin: 0 !important;\\r\\n    padding: 0 !important;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n/* Chatlog area where you see the messages being displayed */\\r\\n.chatlogs {\\r\\n    grid-area: chat-logs;\\r\\n    background: #f3f3f3;\\r\\n    border: 1px black solid;\\r\\n    height: 400px;\\r\\n    min-width: 300px;\\r\\n    overflow: auto;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.sender {\\r\\n    background: #edaa00;\\r\\n    margin: 0 !important;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.sendee {\\r\\n    background: gray;\\r\\n    margin: 0 !important;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.chatmsg {\\r\\n    border-radius: 5px;\\r\\n    clear: both;\\r\\n    border: 1.5px black solid;\\r\\n    margin-bottom: 5px;\\r\\n    padding: 0 5px 5px 5px;\\r\\n}\\r\\n\\r\\n.sender .chatmsg {\\r\\n    float: right;\\r\\n    background: lightblue;\\r\\n    max-width: 75%;\\r\\n    width: auto;\\r\\n}\\r\\n\\r\\n.sendee .chatmsg {\\r\\n    float: left;\\r\\n    background: lightgreen;\\r\\n    max-width: 75%;\\r\\n    width: auto;\\r\\n}\\r\\n\\r\\n/* User input and button formatting */\\r\\n.chat-form {\\r\\n    background: rgb(221, 221, 221);\\r\\n    border: 1px black solid;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.chat-text {\\r\\n    grid-area: chat-input;\\r\\n    float: left;\\r\\n    background: transparent;\\r\\n    border: none;\\r\\n    color: black;\\r\\n    height: 100%;\\r\\n    padding-left: 10px;\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n.chat-submit {\\r\\n    grid-area: chat-submit;\\r\\n    float: right;\\r\\n    border-left: 1px black solid;\\r\\n    height: 100%;\\r\\n    width: 20%;\\r\\n}\\r\\n\\r\\n.btn:hover {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.btn:focus {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n/* Hide when not the \\\"normal\\\" class */\\r\\n.msglist-hide, .chat-hide, .back-hide {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n/* Display both parts of the chat */\\r\\n@media (min-width: 600px) {\\r\\n    .grid {\\r\\n        display: -ms-grid;\\r\\n        display: grid;\\r\\n        -ms-grid-columns: 300px auto;\\r\\n            grid-template-columns: 300px auto;\\r\\n        -ms-grid-rows: 100%;\\r\\n            grid-template-rows: 100%;\\r\\n        grid-template-areas:\\r\\n            \\\"msglist chat\\\";\\r\\n    }\\r\\n\\r\\n    .msglist, .msglist-hide {\\r\\n        grid-area: msglist;\\r\\n        display: -ms-grid;\\r\\n        display: grid;\\r\\n        -ms-grid-columns: 100%;\\r\\n            grid-template-columns: 100%;\\r\\n        -ms-grid-rows: 50px auto;\\r\\n            grid-template-rows: 50px auto;\\r\\n        grid-template-areas: \\r\\n            \\\"msglist-title\\\"\\r\\n            \\\"msglist-users\\\";\\r\\n        min-width: 225px;\\r\\n    }\\r\\n\\r\\n    .chat, .chat-hide {\\r\\n        grid-area: chat;\\r\\n        display: -ms-grid;\\r\\n        display: grid;\\r\\n        -ms-grid-columns: 100%;\\r\\n            grid-template-columns: 100%;\\r\\n        -ms-grid-rows: 50px auto 50px;\\r\\n            grid-template-rows: 50px auto 50px;\\r\\n        grid-template-areas: \\r\\n            \\\"chat-title\\\"\\r\\n            \\\"chat-logs\\\"\\r\\n            \\\"chat-form\\\";\\r\\n        min-width: 300px;\\r\\n    }\\r\\n\\r\\n    .back {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/chat/chat.component.css\n// module id = 218\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".cancel {\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.submit {\\r\\n    width: 45%;\\r\\n    float: right;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/course/course.component.css\n// module id = 219\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h3:after {\\r\\n    content: \\\"\\\";\\r\\n    display: block;\\r\\n    border-bottom: 1px solid #FFD07F;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/devguide/devguide.component.css\n// module id = 220\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".buttons { \\r\\n    text-align: center; \\r\\n} \\r\\n \\r\\n.btn-primary { \\r\\n    width: 100%; \\r\\n    margin-bottom: 5px; \\r\\n} \\r\\n \\r\\n@media (min-width: 600px) { \\r\\n    .btn-primary { \\r\\n        width: 32%; \\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find-home/find-home.component.css\n// module id = 221\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find-now/find-now.component.css\n// module id = 222\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".slider-grid {\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  -ms-grid-columns: 100px auto 100px;\\r\\n      grid-template-columns: 100px auto 100px;\\r\\n  grid-template-areas: \\r\\n  \\\"slider slider slider\\\"\\r\\n  \\\"start  .      end\\\";\\r\\n}\\r\\n\\r\\n.start {\\r\\n  grid-area: start;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.slider {\\r\\n  grid-area: slider;\\r\\n  width: 100%;\\r\\n  padding: 0 15px 0 15px;\\r\\n}\\r\\n\\r\\n.end {\\r\\n  grid-area: end;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width : 2000px;\\r\\n  height : auto;\\r\\n}\\r\\n\\r\\ntr {\\r\\n  height: 20px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.tablecontainer {\\r\\n  width : 100%;\\r\\n  height : 100%;\\r\\n  overflow : auto;\\r\\n  padding : 0, 0, 0, 0;\\r\\n}\\r\\n\\r\\n.opentime {\\r\\n  background-color : #81ea9d;\\r\\n  padding : 5px, 5px, 5px, 5px;\\r\\n  border: 2px solid black;\\r\\n}\\r\\n\\r\\n.closedtime {\\r\\n  background-color : #ed5d50;\\r\\n  padding : 5px, 5px, 5px, 5px;\\r\\n  border: 2px solid black;\\r\\n}\\r\\n\\r\\n.five-minute-chunk{\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*tool tip for each square*/\\r\\n.five-minute-chunk:hover .time-tool-tip{\\r\\n  width: 75px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  border-radius: 6px;\\r\\n  /*padding: 5px 0;*/\\r\\n  position:absolute;/*this is messing up when scrolling to the right, like wtih an offset for some reason*/\\r\\n  top: -20px;\\r\\n  left: 20px;\\r\\n  z-index: 1;\\r\\n  visibility: visible;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.time-tool-tip{\\r\\n  visibility: hidden;\\r\\n  z-index: 20;\\r\\n  /* display: none; */ /* This is making the cells small. */\\r\\n}\\r\\n\\r\\n.five-minute-chunk:hover .time-tool-tip{\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.left-column {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  left: 0;\\r\\n  top: -50;\\r\\n  background-color: #ffffff;\\r\\n  width: 100px;\\r\\n  border: 2px solid black;\\r\\n  text-align: center;\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.left-column:hover {\\r\\n  background-color: #76a8f7;\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n  width: 100%;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n@media (min-width: 600px) {\\r\\n  .btn-primary {\\r\\n    width: 24%;\\r\\n  }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find-times/find-times.component.css\n// module id = 223\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\r\\n  width : auto;\\r\\n  height : auto;\\r\\n}\\r\\n\\r\\ntr {\\r\\n  height: 20px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.tablecontainer {\\r\\n  width : 100%;\\r\\n  height : 100%;\\r\\n  overflow : auto;\\r\\n  padding : 0, 0, 0, 0;\\r\\n}\\r\\n\\r\\n.opentime {\\r\\n  background-color : #81ea9d;\\r\\n  padding : 5px, 5px, 5px, 5px;\\r\\n  border: 2px solid black;\\r\\n}\\r\\n\\r\\n.closedtime {\\r\\n  background-color : #ed5d50;\\r\\n  padding : 5px, 5px, 5px, 5px;\\r\\n  border: 2px solid black;\\r\\n}\\r\\n\\r\\n.five-minute-chunk {\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*tool tip for each square*/\\r\\n.five-minute-chunk:hover .time-tool-tip {\\r\\n  width: 75px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  border-radius: 6px;\\r\\n  /*padding: 5px 0;*/\\r\\n  position:absolute;/*this is messing up when scrolling to the right, like wtih an offset for some reason*/\\r\\n  top: -20px;\\r\\n  left: 20px;\\r\\n  z-index: 1;\\r\\n  visibility: visible;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.time-tool-tip {\\r\\n  visibility: hidden;\\r\\n  z-index: 20;\\r\\n  /* display: none; */ /* This is making the cells small. */\\r\\n}\\r\\n\\r\\n.five-minute-chunk:hover .time-tool-tip {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.left-column {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  left: 0;\\r\\n  top: -50;\\r\\n  background-color: #ffffff;\\r\\n  width: 100px;\\r\\n  border: 2px solid black;\\r\\n  text-align: center;\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.left-column:hover {\\r\\n  background-color: #76a8f7;\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n  width: 100%;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n@media (min-width: 600px) {\\r\\n  .btn-primary {\\r\\n    width: 24%;\\r\\n  }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find/find.component.css\n// module id = 224\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".jumbotron {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    width: 15rem;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.home-content {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-rows: 100% 100% 100%;\\r\\n        grid-template-rows: 100% 100% 100%;\\r\\n    grid-template-areas:\\r\\n        \\\"content-1\\\"\\r\\n        \\\"content-2\\\"\\r\\n        \\\"content-3\\\";\\r\\n}\\r\\n\\r\\n/* For Desktop 600px+ */\\r\\n@media (min-width: 600px) {    \\r\\n    .home-content {\\r\\n        display: -ms-grid;\\r\\n        display: grid;\\r\\n        -ms-grid-columns: 33.33% 33.33% 33.33%;\\r\\n            grid-template-columns: 33.33% 33.33% 33.33%;\\r\\n        grid-template-areas: \\\"content-1 content-2 content-3\\\";\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = 225\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.css\n// module id = 226\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.css\n// module id = 227\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.css\n// module id = 228\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".roomName{\\r\\n  padding-bottom: 50px;\\r\\n}\\r\\n\\r\\n/*.dayContainer{\\r\\n  display: grid;\\r\\n  grid-template-columns: 50%, 50%;\\r\\n  grid-gap: 25px\\r\\n}*/\\r\\n\\r\\n.dayContainer{\\r\\n  display: inline-block;\\r\\n  /*padding is off when time block is a different length*/\\r\\n  padding-right: 20px;\\r\\n  /*border: 2px solid black;*/\\r\\n}\\r\\n\\r\\n.day{\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  -ms-grid-columns: 20% 20% 1fr;\\r\\n      grid-template-columns: 20% 20% 1fr;\\r\\n  -ms-grid-rows: 75% 25%;\\r\\n      grid-template-rows: 75% 25%;\\r\\n  grid-template-areas:\\r\\n      \\\"tc tc tc \\\"\\r\\n      \\\"uv dv .  \\\";\\r\\n  grid-area: day;\\r\\n  grid-gap: 10px;\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n.featurecontainer{\\r\\n  display: inline-block;\\r\\n  /*padding-right: 20px;*/\\r\\n}\\r\\n\\r\\n.feature\\r\\n{\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  -ms-grid-columns: 5% 5% 1fr;\\r\\n      grid-template-columns: 5% 5% 1fr;\\r\\n  -ms-grid-rows: 75% 25%;\\r\\n      grid-template-rows: 75% 25%;\\r\\n  grid-template-areas:\\r\\n      \\\"fn fn fn \\\"\\r\\n      \\\"uv dv .  \\\";\\r\\n      grid-gap: 10px;\\r\\n}\\r\\n\\r\\n.commentContainer{\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  -ms-grid-columns: 5% 5% 1fr 1fr;\\r\\n      grid-template-columns: 5% 5% 1fr 1fr;\\r\\n  -ms-grid-rows: 25% 75%;\\r\\n      grid-template-rows: 25% 75%;\\r\\n  grid-template-areas:\\r\\n      \\\"uv dv cu dt\\\"\\r\\n      \\\"cm cm cm cm\\\";\\r\\n  padding-bottom: 10px;\\r\\n  grid-gap: 10px;\\r\\n}\\r\\n\\r\\n.uVote{\\r\\n  grid-area: uv;\\r\\n  /*border: 1px solid blue;*/\\r\\n}\\r\\n\\r\\n.dVote{\\r\\n  grid-area: dv;\\r\\n  /*border: 1px solid red;*/\\r\\n}\\r\\n\\r\\n.timeContainer{\\r\\n  grid-area: tc;\\r\\n  /*border: 1px solid black;*/\\r\\n  /*padding: 0;*/\\r\\n}\\r\\n\\r\\n.featureName{\\r\\n  grid-area: fn;\\r\\n  /*border: 1px solid black;*/\\r\\n}\\r\\n\\r\\n.comment{\\r\\n  grid-area:cm;\\r\\n  border-radius: 25px;\\r\\n  background-color: #dee3ea;\\r\\n  /*border: 1px solid black;*/\\r\\n}\\r\\n\\r\\n.commentUser{\\r\\n  grid-area: cu;\\r\\n  /*border: 1px solid black;*/\\r\\n}\\r\\n\\r\\n.date{\\r\\n  grid-area:dt;\\r\\n  /*border: 1px solid violet;*/\\r\\n}\\r\\n\\r\\n#commentBox{\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/room/room.component.css\n// module id = 229\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".table-title {\\r\\n    background-color: #d7d1c5;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    margin-left: 5px;\\r\\n    margin-right: 5px;\\r\\n    width: 99%;\\r\\n}\\r\\n  \\r\\ntd { \\r\\n    padding-left: 10px; \\r\\n    border: 5px #eee solid;\\r\\n}\\r\\n\\r\\n.left-column {\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n    background-color: inherit;\\r\\n    left: 0px;\\r\\n    z-index: 20;\\r\\n    min-width: 100px;\\r\\n}\\r\\n\\r\\n.trash { \\r\\n    background-color: white; \\r\\n} \\r\\n \\r\\n.trash:hover { \\r\\n    color: red; \\r\\n} \\r\\n\\r\\n.finalize {\\r\\n    border: none;\\r\\n    text-align: right;\\r\\n    padding-bottom: 5px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/schedule/schedule.component.css\n// module id = 230\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* For header styling */\\r\\n h2 {\\r\\n     padding-bottom: 5px;\\r\\n     padding-left: 10%;\\r\\n     padding-right: 10%;\\r\\n     text-align: left;\\r\\n     font-size: 25px;\\r\\n  }\\r\\n\\r\\n h2:after {\\r\\n     content: \\\"\\\";\\r\\n     display: block;\\r\\n     border-bottom: 1px solid #FFD07F;\\r\\n }\\r\\n\\r\\n/*div left padding */\\r\\n div.content-padding-left {\\r\\n     padding-left : 50px;\\r\\n }\\r\\n\\r\\n/*padding for entire page*/\\r\\n div.page-padding {\\r\\n     padding-left: 10%;\\r\\n     padding-right: 10%;\\r\\n }\\r\\n\\r\\n div.borders {\\r\\n     border-left: 1px dotted black;\\r\\n     border-right: 1px dotted black;\\r\\n     padding-left: 20px;\\r\\n     padding-right: 20px;\\r\\n }\\r\\n\\r\\n/*left indent for header*/\\r\\n div.p1 {\\r\\n     text-align: left;\\r\\n     padding-bottom:0px;\\r\\n     padding-top:0px;\\r\\n     padding-left:15px;\\r\\n }\\r\\n\\r\\n/*dynamic table*/\\r\\n#t01 {\\r\\n    width:100%;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n/*inner table for hover color*/\\r\\n #t02 {\\r\\n     width:100%;\\r\\n     padding: 0;\\r\\n }\\r\\n\\r\\n/*inner table for hover color*/\\r\\n #t03 {\\r\\n     width:100%;\\r\\n     padding: 0;\\r\\n }\\r\\n\\r\\n/*table width*/\\r\\n .width {\\r\\n    text-align: left;\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n\\r\\n/*align-left*/\\r\\n.align-left {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n/*align-right*/\\r\\n.align-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n/*small text*/\\r\\n.small {\\r\\n    font-size: .7em;\\r\\n    text-align: right;\\r\\n    padding-right: 0;\\r\\n}\\r\\n\\r\\n/*dropdown styling*/\\r\\n.small {\\r\\n    font-size: .7em\\r\\n}\\r\\n\\r\\nbutton.dropdown {\\r\\n    background-color: inherit;\\r\\n    border: none;\\r\\n    width: 100%;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n/*center dropdown content*/\\r\\nbutton.hello {\\r\\n    padding: 0;\\r\\n}\\r\\nbutton.dropdown:hover, button.dropdown:active {\\r\\n    background-color: lightblue;\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n div.dropdown-content {\\r\\n     display: inline-block;\\r\\n     text-align: center;\\r\\n }\\r\\n\\r\\n /*hover color for table items*/\\r\\n #t01 tr:hover {\\r\\n     background-color: lightgray;\\r\\n }\\r\\n\\r\\n /*hover color for drop down item*/\\r\\n #t02 tr:hover {\\r\\n     background-color: lightblue;\\r\\n }\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/settings.component.css\n// module id = 231\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*.studyBuddies{\\r\\n  display: grid;\\r\\n  grid-template-columns:100%;\\r\\n  grid-gap: 5px;\\r\\n}*/\\r\\n\\r\\n/*switch to different layout at 600px min-width*/\\r\\n/*@media (min-width: 600px) {*/\\r\\n.studyBuddies{\\r\\n  /*display: grid;\\r\\n  grid-template-columns:repeat(4, 1fr);\\r\\n  grid-gap: 15px;*/\\r\\n  /*display:inline-block;*/\\r\\n}\\r\\n/*}*/\\r\\n\\r\\n.buddy{\\r\\n  /*grid-area:bd;*/\\r\\n  border: 1px solid black;\\r\\n  border-radius: 25px;\\r\\n  text-align: center;\\r\\n  display:inline-block;\\r\\n  width: auto;\\r\\n  padding: 25px;\\r\\n\\r\\n}\\r\\n\\r\\n.courseTitle\\r\\n{\\r\\n  padding-top: 20px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n#nobuddies\\r\\n{\\r\\n  padding-top: 20px;\\r\\n  text-align: center;\\r\\n\\r\\n\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/studybuddy/studybuddy.component.css\n// module id = 232\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h2 {\\r\\n    padding-bottom: 5px;\\r\\n    padding-left: 10%;\\r\\n    padding-right: 10%;\\r\\n    text-align: left;\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\nh2:after {\\r\\n    content: \\\"\\\";\\r\\n    display: block;\\r\\n    border-bottom: 1px solid #FFD07F;\\r\\n}\\r\\n\\r\\np {\\r\\n    padding-left: 10%;\\r\\n    padding-right: 10%;\\r\\n}\\r\\n\\r\\n.ol2 {\\r\\n    padding-left: 12%;\\r\\n    padding-right: 12%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermanual/usermanual.component.css\n// module id = 233\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <body class=\\\"main-grid\\\">\\r\\n    <!-- Navbar -->\\r\\n    <app-navbar></app-navbar>\\r\\n\\r\\n    <!-- Flash messages below navbar -->\\r\\n    <flash-messages></flash-messages>\\r\\n\\r\\n    <!-- Components below flash messages -->\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n    <!-- To Top button shows up if you scroll down far enough -->\\r\\n    <button class=\\\"button-to-top\\\" (click)=\\\"toTop()\\\" id=\\\"to-top\\\">\\r\\n      <span class=\\\"fa fa-chevron-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n      <p>Top</p>\\r\\n    </button>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 239\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body class=\\\"grid\\\">\\r\\n    <!-- BUDDY LIST: If you aren't talking to anyone, then SHOW the buddylist (small screen) -->\\r\\n    <div [ngClass]=\\\"sendee==null ? 'msglist' : 'msglist-hide'\\\">\\r\\n      <div class=\\\"msglist-title\\\">OC Messenger</div>\\r\\n      <!-- Buddies in list -->\\r\\n      <ul *ngIf=\\\"buddyList.length > 0\\\" class=\\\"list-group msglist-users\\\">\\r\\n        <li class=\\\"list-group-item msglist-user\\\" *ngFor=\\\"let buddy of buddyList\\\">\\r\\n          <button class=\\\"btn msglist-btn\\\" (click)=\\\"joinRoom(buddy)\\\">{{buddy.user}}</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <!-- No buddies in list -->\\r\\n      <ul *ngIf=\\\"buddyList.length <= 0\\\" class=\\\"list-group msglist-users\\\">\\r\\n        <h2 style=\\\"text-align: center; top: 50%;\\\">Go to the Study Buddy Tab to add some buddies!</h2>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <!-- MESSAGE LOGS: If you aren't talking to anyone, HIDE the message logs (small screen) -->\\r\\n    <div [ngClass]=\\\"sendee==null ? 'chat-hide' : 'chat'\\\">\\r\\n      <!-- Show the back button if you are talking to someone -->\\r\\n      <div class=\\\"chat-title\\\">\\r\\n        <button *ngIf=\\\"showBack\\\" class=\\\"btn\\\" [ngClass]=\\\"showBack ? 'back' : 'back-hide'\\\" (click)=\\\"back()\\\">\\r\\n          <span class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></span>Back\\r\\n        </button>\\r\\n        <div class=\\\"announcer\\\">{{sendee}}</div>\\r\\n      </div>\\r\\n      <!--\\r\\n        Code to scroll to the bottom of the chat and display either you or the sendee's message \\r\\n        Source: https://stackoverflow.com/questions/35232731/angular2-scroll-to-bottom-chat-style \\r\\n      -->\\r\\n      <div class=\\\"chatlogs\\\" #chatlogs [scrollTop]=\\\"chatlogs.scrollHeight\\\">\\r\\n        <div *ngFor=\\\"let message of messages\\\">\\r\\n          <div *ngIf=\\\"message.sender!=sender\\\" class=\\\"sendee\\\">\\r\\n            <p class=\\\"chatmsg\\\">{{message.message}}</p>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"message.sender==sender\\\" class=\\\"sender\\\">\\r\\n            <p class=\\\"chatmsg\\\">{{message.message}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    \\r\\n    <!-- SENDING MESSAGE: You can input into the text input, then click submit or click enter after writing a message to send a message -->\\r\\n    <form class=\\\"chat-form\\\" (submit)=\\\"sendMessage()\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"chat-text\\\" [(ngModel)]=\\\"message\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary chat-submit\\\">\\r\\n        <span class=\\\"fa fa-send\\\" aria-hidden=\\\"true\\\"></span>\\r\\n      </button>\\r\\n    </form>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/chat/chat.component.html\n// module id = 240\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <body>\\r\\n    <div *ngIf=\\\"!confirm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <!-- 1) Choose the course name -->\\r\\n        <h1>Add a Course</h1>\\r\\n        <h2>Department</h2>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"courseName\\\" name=\\\"courseName\\\" (focus)=\\\"cache()\\\" (change)=\\\"getCourseNumOptions()\\\">\\r\\n          <option selected hidden></option>\\r\\n          <option *ngFor=\\\"let cname of courseNameOptions\\\">{{cname}}</option>\\r\\n        </select>\\r\\n    \\r\\n        <!-- 2) Choose the course number -->\\r\\n        <div *ngIf=\\\"courseNumOptions\\\">\\r\\n          <h2>Course Number</h2>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"courseNum\\\" name=\\\"courseNum\\\" (change)=\\\"getCourseChoiceOptions()\\\">\\r\\n            <option selected hidden></option>\\r\\n            <option *ngFor=\\\"let cid of courseNumOptions\\\"> {{cid}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n    \\r\\n        <!-- 3) Choose the class -->\\r\\n        <div *ngIf=\\\"courseChoiceOptions\\\">\\r\\n          <h2>Course</h2>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"courseChoice\\\" name=\\\"courseChoice\\\">\\r\\n            <option selected hidden></option>\\r\\n            <option *ngFor=\\\"let cchoice of courseChoiceOptions\\\" [ngValue]=\\\"cchoice\\\"> {{courseName}} {{cchoice.num}} |  #{{cchoice.sec}} {{cchoice.day}} {{cchoice.time}} {{cchoice.location}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Options for adding or backing to Schedule Component -->\\r\\n      <div>\\r\\n        <button class=\\\"btn btn-primary cancel\\\" (click)=\\\"onBack()\\\">\\r\\n            <span class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></span> Back\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-default submit\\\" (click)=\\\"onSubmit()\\\">\\r\\n          <span class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></span> Add Course\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <!-- Options for confirming or canceling course addition -->\\r\\n    <div *ngIf=\\\"confirm\\\" id=\\\"confirm\\\" style=\\\"text-align: center\\\">\\r\\n      <h1>Are you sure you want to add?</h1>\\r\\n      <h2>{{confirmMessage}}</h2>\\r\\n      <div>\\r\\n        <button class=\\\"btn btn-default btn-primary\\\" style=\\\"width: 33%\\\" (click)=\\\"addClick(true)\\\">\\r\\n          <span class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></span> Yes\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-primary\\\" style=\\\"width: 33%\\\" (click)=\\\"addClick(false)\\\">\\r\\n          <span class=\\\"fa fa-remove\\\" aria-hidden=\\\"true\\\"></span> No\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/course/course.component.html\n// module id = 241\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head>\\r\\n    <title> Developer Guide </title>\\r\\n  </head>\\r\\n  <body>\\r\\n    <h2 class=\\\"page-header\\\" style=\\\"text-align: center; font-weight: bold\\\">Developer Guide</h2>\\r\\n    \\r\\n    <h3 class=\\\"header\\\"> [What is Open Classroom?] </h3>\\r\\n    <p>As computer science students, we have personally had issues finding open rooms to study in. \\r\\n      So we created an app to let students know what classrooms and labs are open. \\r\\n      Currently students have no easy way to find this out. \\r\\n      They have to chance upon a room or search physically until they find one. \\r\\n      We provide a listing of what rooms are open to make the lives of students easier. \\r\\n      In addition, students are able to replicate their schedules. \\r\\n      By finalizing their schedules, students gain access to Study Buddies where they can find other \\r\\n      people to study with (whether they are in the same class or taking a different section). \\r\\n      Not sharing is on the way along with a more interactive chat system. \\r\\n      A means for users to update erroneous information based on buildings has been enabled and, in the future, will be user moderated. \\r\\n      This application will surely increase the student’s knowledgebase of where they can prepare for their next exam or simply get the \\r\\n      help they need in a free space devoid of professor involvement.</p>\\r\\n    \\r\\n    <h3 class=\\\"header\\\"> [Features] </h3>\\r\\n    <u>Currently Live</u>\\r\\n    <ul>\\r\\n      <li>Signup</li>\\r\\n      <li>Login/Logout</li>\\r\\n      <li>Create and Finalize Schedule</li>\\r\\n      <li>Find Classroom (All Rooms / Right Now / By Time)</li>\\r\\n      <li>Find Study Buddies</li>\\r\\n      <li>Message Study Buddies</li>\\r\\n    </ul>\\r\\n    <u>In Progress</u>\\r\\n    <ul>\\r\\n      <li>User Group Boards</li>\\r\\n      <li>File Transfer between Users</li>\\r\\n    </ul>\\r\\n    \\r\\n    <h3 class=\\\"header\\\"> [Setup] </h3>\\r\\n    <p>You can install the Open Classroom application by downloading the source code directly and unzipping the contents into a folder. \\r\\n      Alternatively, you can also fork project. As this is a MEAN stack application, you must <b>install the 4 dependencies:</b></p>\\r\\n    <ol>\\r\\n      <li> <b>MongoDB</b> (via website)</li>\\r\\n      <li> <b>Angular 2.0</b> (via npm install)</li>\\r\\n      <li> <b>ExpressJS</b> (via npm install)</li>\\r\\n      <li> <b>NodeJS</b> (via website)</li>\\r\\n    </ol>\\r\\n    <p>Furthermore, you must <b>install (\\\"ng install\\\") the node_modules folder</b> into these 2 folders <b>using a terminal at that path location:</b></p>\\r\\n    <ol>\\r\\n      <li> \\\"openclassroom\\\" folder</li>\\r\\n      <li> \\\"openclassroom/angular-src\\\" folder</li>\\r\\n    </ol>\\r\\n  \\r\\n    <u>Populate your MongoDB Database with Classroom Content</u>\\r\\n    <ol>\\r\\n      <li> Navigate where you installed MongoDB (default location: C:\\\\Program Files\\\\MongoDB\\\\Server\\\\3.4\\\\bin) and <b>run \\\"mongod.exe\\\"</b></li>\\r\\n      <li> Navigate to the \\\"scraper\\\" folder</li>\\r\\n      <li> In a terminal at this path location, run <b>\\\"node scraper\\\"</b></li>\\r\\n    </ol>\\r\\n  \\r\\n    <u>Run the Open Classroom Application on Localhost</u>\\r\\n    <ol>\\r\\n      <li> Make sure <b>\\\"mongod.exe\\\"</b> is running (if not, run \\\"mongod.exe\\\" as seen above)</li>\\r\\n      <li> Open a new terminal in the <b>\\\"openclassroom\\\"</b> folder</li>\\r\\n      <li> Run <b>\\\"nodemon\\\"</b> (see dependencies) </li>\\r\\n      <li> Open a new terminal in the <b>\\\"openclassroom/angular-src\\\"</b> folder</li>\\r\\n      <li> Run <b>\\\"ng serve\\\"</b> (see dependencies) </li>\\r\\n      <li> <b>Open a web browser</b> (Chrome, Edge, Firefox, etc.) and go to <b>\\\"localhost:4200\\\"</b> </li>\\r\\n    </ol>\\r\\n    \\r\\n    <h3 class=\\\"header\\\"> [Dependencies] </h3>\\r\\n    <u>Open Classroom uses the MEAN stack</u>\\r\\n    <ul>\\r\\n      <li><a href=\\\"https://www.mongodb.com/download-center\\\"> MongoDB </a></li>\\r\\n      <li><a href=\\\"https://github.com/angular/angular-cli\\\"> Angular 2.0</a></li>\\r\\n      <li><a href=\\\"https://github.com/expressjs/express\\\"> ExpressJS </a></li>\\r\\n      <li><a href=\\\"https://nodejs.org/en/download/\\\"> NodeJS </a></li>\\r\\n    </ul>\\r\\n    <i>(Angular 2.0 and ExpressJS are installed using \\\"ng install\\\". MongoDB and NodeJS shall be installed from their respective websites.)</i> \\r\\n    <br>\\r\\n    <br>\\r\\n    <u>Helpful Applications</u>\\r\\n    <ul>\\r\\n      <li> <a href=\\\"https://nodemon.io/\\\">Nodemon</a> - an application that updates your project without having to restart \\\"npm start\\\" or \\\"ng serve\\\" </li>\\r\\n      <li> <a href=\\\"https://studio3t.com/download/\\\">Studio 3T</a> - a MongoDB client that displays the data in your database (when connected)</li>\\r\\n    </ul>\\r\\n  \\r\\n    <h3 class=\\\"header\\\"> [OpenClassroom Project Tree] </h3>\\r\\n    <ul>\\r\\n      <li>angular-src (where our angular project resides)\\r\\n        <ul>\\r\\n          <li>e2e (for testing)</li>\\r\\n          <li>node_modules (dependencies installed based on package.json)</li>\\r\\n          <li>src\\r\\n            <ul>\\r\\n              <li>app (location of webpage components)\\r\\n                <ul>\\r\\n                  <li>components (modules that are added to the website)</li>\\r\\n                  <li>guards (protects routes)</li>\\r\\n                  <li>services (makes post an get requests to aid component requests)</li>\\r\\n                </ul>\\r\\n              </li>\\r\\n              <li>assets</li>\\r\\n              <li>environments</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </li>\\r\\n      <li>config (where JSON Web Token strategy and database is located)</li>\\r\\n      <li>models (where the MongoDB collection models and its associated functions reside)</li>\\r\\n      <li>node_modules (dependencies installed based on package.json)</li>\\r\\n      <li>routes (location of GET and POST request reside)</li>\\r\\n      <li>scraper (where MongoDB database collections are created)\\r\\n        <ul>\\r\\n        <li>open-classroom-data (JSON file with pre-scraped buildings 2017)</li>\\r\\n        </ul>\\r\\n      </li>\\r\\n    </ul>\\r\\n  \\r\\n    <h3 class=\\\"header\\\"> [How do I contribute?] </h3>\\r\\n    <p>If you want to contribute to the project, feel free to report bugs, download the source code, or fork the project.</p>\\r\\n    <ul>\\r\\n      <li>Source Code: <a href=\\\"https://github.com/jonathanpchan/openclassroom\\\">https://github.com/jonathanpchan/openclassroom</a></li>\\r\\n      <li>Issue Tracker: <a href=\\\"https://github.com/jonathanpchan/openclassroom/issues\\\">https://github.com/jonathanpchan/openclassroom/issues</a></li>\\r\\n    </ul>\\r\\n  \\r\\n    <h3 class=\\\"header\\\"> [Support] </h3>\\r\\n    <p>If you have any questions, feel free to contact us at <a href=\\\"openclassroom2017@gmail.com\\\">openclassroom2017@gmail.com</a>.</p>\\r\\n  </body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/devguide/devguide.component.html\n// module id = 242\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <!-- 1) Building Select -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <h1 id=\\\"title\\\">Building</h1>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"building\\\" name=\\\"building\\\" (focus)=\\\"displayButtons($event)\\\">\\r\\n        <option style=\\\"display: none\\\"></option>\\r\\n        <option *ngFor=\\\"let buildingName of buildingNames\\\"> {{buildingName}} </option>\\r\\n      </select>\\r\\n    </div>\\r\\n    \\r\\n    <!-- 2) Button Select -->\\r\\n    <div class=\\\"buttons\\\" id=\\\"buttons\\\" style=\\\"display: none; text-align: center;\\\">\\r\\n      <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"displayOption('all')\\\" value=\\\"All Rooms\\\">\\r\\n      <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"displayOption('now')\\\" value=\\\"Right Now\\\">\\r\\n      <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"displayOption('times')\\\" value=\\\"By Time\\\">\\r\\n    </div>\\r\\n    \\r\\n    <!-- 3a) Get all rooms based on building and time -->\\r\\n    <app-find id=\\\"all\\\" style=\\\"display: none\\\" name={{building}}></app-find>\\r\\n    \\r\\n    <!-- 3b) Get all rooms based on building -->\\r\\n    <app-find-now id=\\\"now\\\" style=\\\"display: none\\\" name={{building}}></app-find-now>\\r\\n    \\r\\n    <!-- 3c) Get all rooms based on building and time -->\\r\\n    <app-find-times id=\\\"times\\\" style=\\\"display: none\\\" name={{building}}></app-find-times>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find-home/find-home.component.html\n// module id = 243\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n    <head></head>\\r\\n    <body>\\r\\n        <!-- Show if no rooms available -->\\r\\n        <h1 *ngIf=\\\"!show\\\">No rooms currently available in {{name}}</h1>\\r\\n        <div id=\\\"nowTimes\\\">\\r\\n            <!-- Show if rooms are available -->\\r\\n            <ng-container *ngIf=\\\"show\\\">\\r\\n                <h2 *ngFor=\\\"let room of roomsList\\\" (click)=\\\"showRoom(name, room.name)\\\">\\r\\n                    Room: {{room.name}} from {{room.st}} until {{room.et}}\\r\\n                </h2>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <!-- Show when room is clicked -->\\r\\n        <app-room id=\\\"room2\\\" style=\\\"display: none\\\" building={{buildingName}} room={{roomNumber}}></app-room>\\r\\n    </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find-now/find-now.component.html\n// module id = 244\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <!-- Day Buttons -->\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <button (click) = \\\"show('omon')\\\" class=\\\"btn btn-primary\\\"> Monday</button>\\r\\n      <button (click) = \\\"show('otue')\\\" class=\\\"btn btn-primary\\\"> Tuesday</button>\\r\\n      <button (click) = \\\"show('owed')\\\" class=\\\"btn btn-primary\\\"> Wednesday</button>\\r\\n      <button (click) = \\\"show('othu')\\\" class=\\\"btn btn-primary\\\"> Thursday</button>\\r\\n    </div>\\r\\n    \\r\\n    <!-- Slider -->\\r\\n    <div class=\\\"slider-grid\\\">\\r\\n      <span class=\\\"start\\\" id=\\\"start\\\"></span>\\r\\n      <nouislider class=\\\"slider\\\" [config]=\\\"timeSliderConfig\\\" [(ngModel)]=\\\"timeRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" id=\\\"slider\\\"></nouislider>\\r\\n      <span class=\\\"end\\\" id=\\\"end\\\"></span>\\r\\n    </div>\\r\\n    \\r\\n    <!-- Find Times Table -->\\r\\n    <div class=\\\"tablecontainer\\\" id=\\\"table-2\\\" style=\\\"display: none; margin-top: 35px;\\\">\\r\\n      <table>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <th colspan=\\\"6\\\" *ngFor=\\\"let time of times | slice:tstart:tend\\\">{{time}}</th>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let rooms of roomsList\\\">\\r\\n            <!-- Attach a click to the leftmost column -->\\r\\n            <th class=\\\"left-column\\\" (click)=\\\"getRoomInfo(name, rooms.name)\\\">{{name}}-{{rooms.name}}</th>\\r\\n            <td class =\\\"five-minute-chunk\\\" *ngFor=\\\"let room of rooms?.room | slice:start:end let i = index \\\" [ngClass]=\\\"room ? 'opentime' : 'closedtime'\\\">\\r\\n              <span class=\\\"time-tool-tip\\\">{{displayToolTip(i)}}</span> <!--this messes up the left column for some reason -->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <!-- Display the room info on leftmost column click -->\\r\\n    <app-room id=\\\"room3\\\" style=\\\"display: none\\\" building={{buildingName}} room={{roomNumber}}></app-room>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find-times/find-times.component.html\n// module id = 245\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <!-- Day Buttons -->\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n        <button (click) = \\\"show('omon')\\\" class=\\\"btn btn-primary\\\" id=\\\"mon\\\"> Monday</button>\\r\\n        <button (click) = \\\"show('otue')\\\" class=\\\"btn btn-primary\\\" id=\\\"tue\\\"> Tuesday</button>\\r\\n        <button (click) = \\\"show('owed')\\\" class=\\\"btn btn-primary\\\" id=\\\"wed\\\"> Wednesday</button>\\r\\n        <button (click) = \\\"show('othu')\\\" class=\\\"btn btn-primary\\\" id=\\\"thu\\\"> Thursday</button>\\r\\n      </div>\\r\\n\\r\\n      <!-- Find All Rooms Table -->\\r\\n      <div class=\\\"tablecontainer\\\" id=\\\"table\\\" style=\\\"display: none\\\">\\r\\n        <table>\\r\\n          <tbody>\\r\\n            <tr style=\\\"display: sticky\\\">\\r\\n              <th colspan=\\\"12\\\" *ngFor=\\\"let time of times\\\">{{time}}</th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let rooms of roomsList\\\">\\r\\n              <!-- Attach a click to the leftmost column -->\\r\\n              <th class=\\\"left-column\\\" (click) = \\\"getRoomInfo(name, rooms.name)\\\">{{name}}-{{rooms.name}}</th>\\r\\n              <td class =\\\"five-minute-chunk\\\" *ngFor=\\\"let room of rooms?.room | slice:96:264 let i = index \\\" [ngClass]=\\\"room ? 'opentime' : 'closedtime'\\\">\\r\\n                <span class=\\\"time-tool-tip\\\">{{displayToolTip(i)}}</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <!-- Display the room info on leftmost column click -->\\r\\n      <app-room id=\\\"room\\\" style=\\\"display: none\\\" building={{buildingName}} room={{roomNumber}}></app-room> \\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/find/find.component.html\n// module id = 246\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body class=\\\"home-grid\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n      <h1>Open Classroom</h1>\\r\\n      <h2>Find available classrooms for your studying needs</h2> \\r\\n      \\r\\n      <!-- Buttons to show if NOT logged in -->\\r\\n      <div *ngIf = \\\"!userService.loggedIn()\\\">\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> \\r\\n        <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n      </div>\\r\\n      <!-- Buttons to show if logged in -->\\r\\n      <div *ngIf = \\\"userService.loggedIn()\\\">\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/schedule']\\\">View My Schedule</a> \\r\\n        <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/findclassroom']\\\">Find Open Classroom</a>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <p>\\r\\n          <br />\\r\\n          <!-- Links to usermanual and devguide -->\\r\\n          <a [routerLink]=\\\"['/usermanual']\\\">User Manual</a> | <a [routerLink]=\\\"['/devguide']\\\">Dev Guide</a> \\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Content below jumbotron content -->\\r\\n    <div class=\\\"home-content\\\">\\r\\n      <div class=\\\"content-1\\\">\\r\\n        <h3>Find the Best Study Spot!</h3>\\r\\n        <p>Find open rooms by building, right now, or by time.</p>\\r\\n      </div>\\r\\n      <div class=\\\"content-2\\\">\\r\\n        <h3>Study with fellow Study Buddies!</h3>\\r\\n        <p>Find others in the same program to study with.</p>\\r\\n      </div>\\r\\n      <div class=\\\"content-3\\\">\\r\\n        <h3>Share Class Notes!</h3>\\r\\n        <p>Share notes to get an edge on the competition.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = 247\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <h1>Login</h1>\\r\\n    <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n      <!-- Email field -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Email</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\r\\n      </div>\\r\\n      \\r\\n      <!-- Password Field -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n      </div>\\r\\n\\r\\n      <!-- Submit button -->\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\r\\n    </form>\\r\\n  </body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = 248\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <!-- \\r\\n      Stood up quickly by adapting bootswatch source code (clicking the navbar we wanted to see information about)\\r\\n      Source: https://bootswatch.com/cosmo/\\r\\n     -->\\r\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\" style=\\\"z-index: 1000\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">OpenClassroom</a>\\r\\n      <button (click)=\\\"toggle()\\\" class=\\\"navbar-toggler collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\"> \\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse\\\" [ngClass]=\\\"show ? 'show' : ''\\\" id=\\\"navbarColor02\\\" (click)=\\\"toggle()\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\" (click)=\\\"hide()\\\">\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">My Schedule</a></li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/findclassroom']\\\">Find Classroom</a></li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Messaging</a></li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/studybuddy']\\\">Study Buddy</a></li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\" (click)=\\\"hide()\\\">\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/settings']\\\">Settings</a></li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"!userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a></li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"!userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register </a></li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"userService.loggedIn()\\\" [routerLinkActive]=\\\"[active]\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" [routerLink]=\\\"['/']\\\">Logout</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = 249\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <h1>Register</h1>\\r\\n    <form (submit)=\\\"onRegisterSubmit()\\\">\\r\\n\\r\\n      <!-- Name field -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Name</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n\\r\\n      <!-- Username field -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Username</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n\\r\\n      <!-- Email field -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Email</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" >\\r\\n      </div>\\r\\n\\r\\n      <!-- Password field -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Password</label>\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n\\r\\n      <!-- Submit button -->\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\r\\n    </form>\\r\\n  </body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.html\n// module id = 250\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <h1 class =\\\"roomName\\\">{{rooms?.building}}-{{rooms?.room}}</h1>\\r\\n    <div class = \\\"timesection\\\">\\r\\n      <h2>Open Times </h2>\\r\\n\\r\\n      <h2>Monday</h2>\\r\\n      <div class = \\\"dayContainer\\\" *ngFor=\\\"let time of rooms?.mon let i = index\\\">\\r\\n        <div class = \\\"day\\\">\\r\\n          <h3 class = \\\"timeContainer\\\" >Open From {{timeFormat(time.st)}} - {{timeFormat(time.et)}}</h3>\\r\\n          <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-md\\\" (click)=\\\"vote('mon', i, 1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>{{time.uVote}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"dVote\\\" class=\\\"btn btn-default btn-md\\\" (click)=\\\"vote('mon', i, -1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>{{time.dVote}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h2>Tuesday</h2>\\r\\n      <div class = \\\"dayContainer\\\" *ngFor=\\\"let time of rooms?.tue let i = index\\\">\\r\\n        <div class = \\\"day\\\">\\r\\n          <h3 class = \\\"timeContainer\\\" >Open From {{timeFormat(time.st)}} - {{timeFormat(time.et)}}</h3>\\r\\n          <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-md\\\" (click)=\\\"vote('tue', i, 1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>{{time.uVote}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"dVote\\\" class=\\\"btn btn-default btn-md\\\" (click)=\\\"vote('tue', i, -1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>{{time.dVote}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h2>Wednesday</h2>\\r\\n      <div class = \\\"dayContainer\\\" *ngFor=\\\"let time of rooms?.wed let i = index\\\">\\r\\n        <div class = \\\"day\\\">\\r\\n          <h3 class = \\\"timeContainer\\\" >Open From {{timeFormat(time.st)}} - {{timeFormat(time.et)}}</h3>\\r\\n          <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-md\\\" (click)=\\\"vote('wed', i, 1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>{{time.uVote}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"dVote\\\" class=\\\"btn btn-default btn-md\\\" (click)=\\\"vote('wed', i, -1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>{{time.dVote}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h2>Thursday</h2>\\r\\n      <div class = \\\"dayContainer\\\" *ngFor=\\\"let time of rooms?.thu let i = index\\\">\\r\\n        <div class = \\\"day\\\">\\r\\n          <h3 class = \\\"timeContainer\\\" >Open From {{timeFormat(time.st)}} - {{timeFormat(time.et)}}</h3>\\r\\n          <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-md\\\" (click)=\\\"vote('thu', i, 1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>{{time.uVote}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"dVote\\\" class=\\\"btn btn-default btn-md\\\" (click)=\\\"vote('thu', i, -1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>{{time.dVote}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class = \\\"featureSection\\\">\\r\\n      <h2>Features</h2>\\r\\n      <div class = \\\"featureContainer\\\">\\r\\n        <div class = \\\"feature\\\" *ngIf=\\\"loaded\\\">\\r\\n          <h3 class = \\\"featureName\\\">Outlets</h3>\\r\\n          <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-md\\\" (click)=\\\"vote('hasOutlets', -1, 1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>{{rooms.hasOutlets.uVote}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"dVote\\\" class=\\\"btn btn-default btn-md\\\" (click)=\\\"vote('hasOutlets', -1, -1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>{{rooms.hasOutlets.dVote}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"featureContainer\\\">\\r\\n        <div class = \\\"feature\\\" *ngIf=\\\"loaded\\\">\\r\\n          <h3 class = \\\"featureName\\\">White Board</h3>\\r\\n          <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-nd\\\" (click)=\\\"vote('whiteBoard', -1, 1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>{{rooms.whiteBoard.uVote}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"dVote\\\" class=\\\"btn btn-default btn-md\\\"(click)=\\\"vote('whiteBoard', -1, -1)\\\" >\\r\\n            <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>{{rooms.whiteBoard.dVote}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class = \\\"commentSection\\\">\\r\\n      <h2>Comments</h2>\\r\\n      <form id = \\\"commentBox\\\" (submit)=\\\"onCommentSubmit()\\\">\\r\\n        Add A Comment:\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\">\\r\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\r\\n      </form>\\r\\n      <div class = \\\"commentContainer\\\" *ngFor = \\\"let comment of rooms?.comments let i = index\\\">\\r\\n        <p class = \\\"comment\\\">\\\"{{comment.content}}\\\"</p>\\r\\n        <p class = \\\"commentUser\\\">{{comment.email}} </p>\\r\\n        <button type=\\\"button\\\" class=\\\"uVote\\\" class=\\\"btn btn-primary btn-sm\\\"  (click)=\\\"vote('comments', i, 1)\\\" >\\r\\n          <span class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></span> {{comment.uVote}}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\"  class=\\\"dVote\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"vote('comments', i, -1)\\\" >\\r\\n          <span class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></span> {{comment.dVote}}\\r\\n        </button>\\r\\n        <p class = \\\"date\\\">{{comment.date}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/room/room.component.html\n// module id = 251\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <body>\\r\\n    <div *ngIf=\\\"user && !add && !delete && !finalize\\\">\\r\\n      <h1>My Schedule</h1>\\r\\n      <div style=\\\"overflow: auto\\\">\\r\\n        <table>\\r\\n          <thead></thead>\\r\\n          <tbody>\\r\\n            <!-- Display Finalize button if not finalized -->\\r\\n            <tr *ngIf=\\\"!isFinalized\\\">\\r\\n              <td class=\\\"finalize\\\" colspan=\\\"6\\\"><input class=\\\"btn btn-primary\\\" type=\\\"button\\\" value=\\\"Finalize Schedule\\\" (click)=\\\"clickFinalize()\\\"></td>\\r\\n            </tr> \\r\\n\\r\\n            <!-- Display schedule headers -->\\r\\n            <tr class=\\\"table-title\\\">\\r\\n              <td class=\\\"left-column\\\"><h3>NAME</h3></td> \\r\\n              <td style=\\\"min-width: 125px\\\"><h3>CLASS #</h3></td> \\r\\n              <td style=\\\"min-width: 100px\\\"><h3>DAYS</h3></td> \\r\\n              <td style=\\\"min-width: 125px\\\"><h3>TIME</h3></td> \\r\\n              <td style=\\\"min-width: 150px\\\"><h3>LOCATION</h3></td> \\r\\n              <td style=\\\"min-width: 175px\\\"><h3>INSTRUCTOR</h3></td> \\r\\n              <td *ngIf=\\\"schedule.length > 0\\\" style=\\\"background: white; width: 2.5%; border: none;\\\"></td> \\r\\n            </tr>\\r\\n\\r\\n            <!-- Display scehdule items -->\\r\\n            <tr *ngFor=\\\"let sched of schedule; let i = index;\\\" colspan=\\\"6\\\" style=\\\"background-color: white\\\">\\r\\n              <td class=\\\"left-column\\\">{{sched.name}} {{sched.num}}</td> \\r\\n              <td>{{sched.sec}}</td> \\r\\n              <td>{{sched.day}}</td> \\r\\n              <td>{{sched.time}}</td> \\r\\n              <td>{{sched.location}}</td> \\r\\n              <td>{{sched.prof}}</td> \\r\\n\\r\\n              <!-- \\r\\n                Display icons in buttons\\r\\n                Source: https://getbootstrap.com/docs/3.3/components/ \\r\\n              --> \\r\\n              <td *ngIf=\\\"!isFinalized\\\" style=\\\"padding: 0;\\\"> \\r\\n                <button class=\\\"btn trash\\\" (click)=\\\"clickDelete(i)\\\"> \\r\\n                  <span class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></span> \\r\\n                </button> \\r\\n              </td> \\r\\n            </tr>\\r\\n\\r\\n            <!-- Display add button if not finalized -->\\r\\n            <tr *ngIf=\\\"!isFinalized\\\">\\r\\n              <td colspan=\\\"6\\\" style=\\\"padding: 0px\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width : 100%\\\" value=\\\"Add Course\\\" (click)=\\\"clickAdd()\\\">\\r\\n                  <span class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></span> Add Course\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n      \\r\\n    <!-- Display course component if you click the Add button -->\\r\\n    <div *ngIf=\\\"user && add && !delete\\\">\\r\\n      <app-course (afterConfirm)=\\\"onCourseAdd($event)\\\"></app-course>\\r\\n    </div>\\r\\n    \\r\\n    <!-- Display the remove confirmation page if you click the Trash icon -->\\r\\n    <div *ngIf=\\\"user && !add && delete\\\" style=\\\"text-align: center;\\\"> \\r\\n      <h1>Are you sure you want to remove?</h1>\\r\\n      <h3>{{deleteMessage}}</h3>\\r\\n      <div>\\r\\n        <!-- If Yes, delete course from schedule -->\\r\\n        <button class=\\\"btn btn-default\\\" style=\\\"width: 33%\\\" (click)=\\\"onCourseDelete(true)\\\">\\r\\n          <span class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></span> Yes\\r\\n        </button>\\r\\n        <!-- If No, keep course in schedule -->\\r\\n        <button class=\\\"btn btn-primary\\\" style=\\\"width: 33%\\\" (click)=\\\"onCourseDelete(false)\\\">\\r\\n          <span class=\\\"fa fa-remove\\\" aria-hidden=\\\"true\\\"></span> No\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Display the finalize confirmation page if you click the finalize schedule button -->\\r\\n    <div *ngIf=\\\"user && !add && !delete && finalize && !isFinalized\\\" style=\\\"text-align: center;\\\"> \\r\\n      <h1>Are you sure you want to finalize your schedule?</h1>\\r\\n      <div>\\r\\n        <!-- If Yes, finalize the schedule -->\\r\\n        <button class=\\\"btn btn-default\\\" style=\\\"width: 33%\\\" (click)=\\\"onFinalize(true)\\\">\\r\\n          <span class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></span> Yes\\r\\n        </button>\\r\\n        <!-- If No, don't finalize the schedule -->\\r\\n        <button class=\\\"btn btn-primary\\\" style=\\\"width: 33%\\\" (click)=\\\"onFinalize(false)\\\">\\r\\n          <span class=\\\"fa fa-remove\\\" aria-hidden=\\\"true\\\"></span> No\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\\r\\n\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/schedule/schedule.component.html\n// module id = 252\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<body>\\r\\n<div id=\\\"container\\\">\\r\\n  <h1>\\r\\n    Settings\\r\\n  </h1>\\r\\n  <h2>\\r\\n    <table id=\\\"t03\\\">\\r\\n      <tr>\\r\\n        <td class=\\\"align-left\\\">User Profile</td>\\r\\n        <td class=\\\"align-right\\\">\\r\\n          <label class=\\\"container small\\\">Finalized Schedule\\r\\n            <input type=\\\"checkbox\\\" [checked]=\\\"isFinalized\\\" [disabled]=\\\"!isFinalized\\\" (change)=\\\"unfinalize()\\\">\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </h2>\\r\\n\\r\\n  <div class=\\\"page-padding\\\">\\r\\n    <div class=\\\"borders\\\">\\r\\n        <table id=\\\"t01\\\">\\r\\n          <tr>\\r\\n            <td class=\\\"width\\\">Username</td>\\r\\n            <td class =\\\"align-left\\\"> {{username}} </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"width\\\">E-mail</td>\\r\\n            <td class=\\\"align-left\\\">{{email}}</td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      <button (click)=\\\"toggleView()\\\" class=\\\"dropdown\\\">\\r\\n        <table id=\\\"t02\\\">\\r\\n          <tr>\\r\\n            <td class=\\\"width\\\">Password</td>\\r\\n            <td class=\\\"align-left\\\">************</td>\\r\\n            <td class=\\\"align-right\\\" *ngIf=\\\"!show\\\">Edit</td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </button>\\r\\n\\r\\n      <div *ngIf=\\\"show\\\">\\r\\n          <form class=\\\"form-horizontal\\\" (submit)=\\\"onSubmitPW()\\\">\\r\\n            <div class=\\\"form-group form-group-sm col-xs-3\\\">\\r\\n              <label class=\\\"col-sm-2 control-label\\\" for=\\\"sm\\\">Old Password</label>\\r\\n              <div class=\\\"col-sm-10\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"sm\\\" [(ngModel)]=\\\"oldpw\\\" name=\\\"oldpw\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group form-group-sm col-xs-3\\\">\\r\\n              <label class=\\\"col-sm-2 control-label\\\" for=\\\"sm\\\">New Password</label>\\r\\n              <div class=\\\"col-sm-10\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"sm\\\" [(ngModel)]=\\\"newpw\\\" name=\\\"newpw\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n              <input style=\\\"margin: 15px\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\r\\n          </form>\\r\\n      </div>\\r\\n\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/settings.component.html\n// module id = 253\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head></head>\\r\\n  <body>\\r\\n    <div id=\\\"warning\\\" style=\\\"display: none\\\" *ngIf=\\\"!isFinalized\\\">\\r\\n      <h1>Please finalize your schedule in your schedule page</h1>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"cronjobwait\\\" style=\\\"display: none\\\">\\r\\n      <h2> Please be paitent and wait for us to process your buddies, check back later to see!</h2>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"buddies\\\" *ngIf=\\\"isFinalized\\\">\\r\\n    <h1 style=\\\"text-align: center\\\">Pick A Course</h1>\\r\\n    <select id=\\\"courseSelect\\\" class=\\\"form-control\\\" (change)=\\\"showBuddies()\\\">\\r\\n      <option selected hidden></option>\\r\\n      <option *ngFor=\\\"let class of schedule\\\"> {{class.name}} {{class.num}}</option>\\r\\n    </select>\\r\\n\\r\\n    <div id=\\\"nobuddies\\\" style=\\\"display: none\\\">\\r\\n      <h2> Sorry there are no study buddies available for this course</h2>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"buddylist\\\" style=\\\"display: none\\\" *ngIf=\\\"loaded\\\">\\r\\n      <h1 class = \\\"courseTitle\\\">Potential Study Buddies For {{courseBuddies.name}}</h1>\\r\\n      <div class=\\\"studdyBuddies\\\" *ngIf=\\\"loaded\\\">\\r\\n        <a *ngFor = \\\"let buddy of courseBuddies?.buddies let i = index\\\" (click)=\\\"message(i)\\\" routerLink=\\\"/chat\\\"><h3 class=\\\"buddy\\\">{{buddy.name}}</h3></a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/studybuddy/studybuddy.component.html\n// module id = 254\n// module chunks = 1","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head>\\r\\n    <title> User manual </title>\\r\\n  </head>\\r\\n  <body style=\\\"text-align: left\\\">\\r\\n      <h1 class=\\\"page-header\\\" style=\\\"text-align: center;\\\">User Manual</h1>\\r\\n      <h2> Overview </h2>\\r\\n      <p class= \\\"tab\\\">\\r\\n        For a student, finding the ideal place to study can be a reoccurring issue.\\r\\n        With the inception of OpenClassroom, our goal is to minimize students' already\\r\\n        high stress levels by a simple solution to finding optimal classrooms to study in.\\r\\n        Our application will be able to search for classrooms based on a specific time,\\r\\n        a specific building, or by a \\\"now\\\" function that will list all available classrooms\\r\\n        that are open at the time of query.\\r\\n      </p>\\r\\n\\r\\n      <h2> Registration </h2>\\r\\n      <p>To register, you will need a valid e-mail address.</p>\\r\\n      <ol class = \\\"ol2\\\">\\r\\n        <li> Click on the 'Register' tab.</li>\\r\\n        <li> Enter your name.</li>\\r\\n        <li> Enter a username. (Other users will be able to identify you by this.)</li>\\r\\n        <li> Enter a valid e-mail address.</li>\\r\\n        <li> Create a password.</li>\\r\\n        <li> Click submit.</li>\\r\\n        <li> Congratulations! You will now be able to login and access our provided services.</li>\\r\\n      </ol>\\r\\n    \\r\\n      <h2> Login </h2>\\r\\n      <p>To login, you will need to have a registered account.</p>\\r\\n      <ol class = \\\"ol2\\\">\\r\\n        <li> Click on the 'Login' tab. </li>\\r\\n        <li> Enter your e-mail address.</li>\\r\\n        <li> Enter your password.</li>\\r\\n        <li> Click submit.</li>\\r\\n      </ol>\\r\\n\\r\\n      <h2> Adding Your Schedule </h2>\\r\\n      <ol class = \\\"ol2\\\">\\r\\n          <li> Click on the 'Schedule' tab. </li>\\r\\n          <li> Click \\\"Add Course\\\". </li>\\r\\n          <li> Enter course information. </li>\\r\\n          <li> Click Accept. </li>\\r\\n      </ol>\\r\\n\\r\\n      <h2> Searching For a Classroom </h2>\\r\\n      <ol class = \\\"ol2\\\">\\r\\n          <li> Click on the 'Find Classroom' tab. </li>\\r\\n          <li> Select a building from the provided list. </li>\\r\\n          <li> Select 'Right Now' </li>\\r\\n          <li> Select 'By Building' </li>\\r\\n          <ol type=\\\"i\\\">\\r\\n              <li> Select a day. </li>\\r\\n              <li> Browse the times by horizontally scrolling. </li>\\r\\n          </ol>\\r\\n          <li> Select 'By Time' </li>\\r\\n          <ol type=\\\"i\\\">\\r\\n              <li> Select a day. </li>\\r\\n              <li> Adjust the time slider. </li>\\r\\n              <li> Browse the times by horizontally scrolling. </li>\\r\\n          </ol>\\r\\n      </ol>\\r\\n\\r\\n      <h2> Finding a Study Buddy </h2>\\r\\n      <ol class = \\\"ol2\\\">\\r\\n          <li> Click on the 'Schedule' tab. </li>\\r\\n          <li> Click 'Finalize Schedule' </li>\\r\\n          <li> Allow 24 hours for potential study buddies to appear. </li>\\r\\n          <li> Click on the 'Study Buddy' tab. </li>\\r\\n          <li> Select one of your courses. </li>\\r\\n          <li> Select a study buddy. </li>\\r\\n          <li> Start a conversation! </li>\\r\\n      </ol>\\r\\n      <h2> Viewing a Room's Information </h2>\\r\\n      <ol class = \\\"ol2\\\">\\r\\n          <li> Search for a classroom via 'By Building' or 'By Time'. </li>\\r\\n          <ol type=\\\"i\\\"> <li>Click the room #.</li> </ol>\\r\\n          <li> Search for a classroom via 'By Now'. </li>\\r\\n          <ol type =\\\"i\\\"> <li>Click anywhere on the rooms that were found. </li></ol>\\r\\n      </ol>\\r\\n    \\r\\n    <h2> FAQ </h2>\\r\\n      <ol class =\\\"ol2\\\">\\r\\n          <li> When will the application be released to the public? </li>\\r\\n          <ul>\\r\\n              <li> We are looking to launch in December, 2017! </li>\\r\\n          </ul>\\r\\n          <li> How can I become a part of the development team? </li>\\r\\n          <ul>\\r\\n              <li> Please refer to our developer guide!  </li>\\r\\n          </ul>\\r\\n          <li> I can't login! What should I do?</li>\\r\\n          <ul>\\r\\n              <li> Please make sure you're using the credentials you created your account\\r\\n                  with, and if you are still unable to access your account, please contact us at\\r\\n                  <a href=\\\"openclassroom2017@gmail.com\\\">openclassroom2017@gmail.com.</a>\\r\\n              </li>\\r\\n          </ul>\\r\\n          <li> I finalized my schedule, how come no one appears in my Study Buddies? </li>\\r\\n          <ul>\\r\\n              <li>Please allow 24 hours for our system to update and provide users for you to study with. </li>\\r\\n          </ul>\\r\\n      </ol>\\r\\n\\r\\n  </body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermanual/usermanual.component.html\n// module id = 255\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 294\n// module chunks = 1"],"sourceRoot":""}